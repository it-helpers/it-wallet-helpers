{
  "openapi": "3.0.2",
  "info": {
    "title": "IT Wallet API - EAA Issuance Flow",
    "version": "0.6.0",
    "description": "API for the Italian EUDI Wallet implementation profile (version: '0.6.0')  <a target=\"blank\" href=\"https://italia.github.io/eudi-wallet-it-docs/v0.6.0/en/\">https://italia.github.io/eudi-wallet-it-docs/v0.6.0/en/</a>"
  },
  "servers": [
    {
      "url": "https://api.server.test/it-wallet-api/v0.6.0",
      "description": "Main (production) server"
    }
  ],
  "paths": {
    "/as/par": {
      "post": {
        "summary": "The Pushed Authorization Request (PAR) Endpoint for starting a new authorization flow to obtain an access token that authorize to access to the Credendential Endpoint for requesting an EAA Verifiable Credendential",
        "tags": [
          "Authorization Server"
        ],
        "operationId": "parRequest_authorization_server",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ParRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_405"
                }
              }
            }
          },
          "413": {
            "description": "Payload Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_413"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_429"
                }
              }
            }
          },
          "5XX": {
            "description": "Unexpected error."
          }
        }
      }
    },
    "/authorize": {
      "get": {
        "tags": [
          "Authorization Server"
        ],
        "summary": "The Authorize Endpoint for exchanging a request_uri value with an authorization code",
        "operationId": "authorize_authorization_server",
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "description": "It MUST be set to the same value in the PAR Request (in URL-encoded format)",
            "required": true,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "example": "AxjAnj0t5qpRVgR6apZ7gChaPb6y8gNm7CkPd58PD4c"
          },
          {
            "name": "request_uri",
            "in": "query",
            "description": "It MUST be set to the same value as obtained by PAR Response (in URL-encoded format)",
            "required": true,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "example": "urn%3ietf%3params%3oauth%3request_uri%3bwc4JK-ESC0w8acc191e-Y1LTC2"
          }
        ],
        "responses": {
          "302": {
            "description": "Found  <br> <br/> <b>No content</b> <br/><br/>=> EXAMPLE Location header: <br/><br/>https%3A%2F%2Fwallet-rp.ipzs.it%2Flogin%3Fstate%3DfyZiOL9Lf2CeKuNT2JzxiLRDink0uPcd",
            "headers": {
              "Location": {
                "description": "The Location response header indicates the URL of RP Wallet service to redirect the Wallet Instance to.<br/><br/>This URL present in query string: <ul><li>state</li></ul>",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_405"
                }
              }
            }
          },
          "413": {
            "description": "Payload Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_413"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_429"
                }
              }
            }
          },
          "5XX": {
            "description": "Unexpected error."
          }
        }
      }
    },
    "/callback": {
      "get": {
        "tags": [
          "Authorization Server"
        ],
        "summary": "The internal Callback Endpoint that supports the Authorize Endpoint for issuing an authorization code (the response code presented in the request will be exchanged for an authorization code)",
        "operationId": "callback_authorization_server",
        "parameters": [
          {
            "name": "response_code",
            "in": "query",
            "description": "Response code returned by the RP Wallet after Wallet Instance end user authentication is completed; this code will be exchanged for an authorization code",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "example": "091535f699ea575c7937fa5f0f454aee"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Found  <br> <br/> <b>No content</b> <br> <br/> <b>BINDING HTTP-REDIRECT</b> <br> <br/> => EXAMPLE Location Header: <br /> <br /> https%3A%2F%2Fstart.wallet.example.org%3Fcode%3DSplxlOBeZQQYbYS6WxSbIA%26state%3DfyZiOL9Lf2CeKuNT2JzxiLRDink0uPcd%26iss%3DAxjAnj0t5qpRVgR6apZ7gChaPb6y8gNm7CkPd58PD4c",
            "headers": {
              "Location": {
                "description": "The Location response header indicates the URL  to redirect the Wallet Instance.<br/><br/>This URL present in query string: <ul><li>code (the authorization code generated by the Authorization Server)</li><li>state</i></li><li>iss</li></ul>",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "200": {
            "description": "Ok <br> <br/> <b>BINDING HTTP-POST</b>, according to Section 4.3.3 of the <a target=\"blank\" href=\"https://openid.net/specs/openid-financial-api-jarm.html#response-mode-form_post.jwt\">JWT Secured Authorization Response Mode for OAuth 2.0 specification</a> <br/><br/> <a target=\"blank\" href=\"https://jwt.io/#debugger-io?token=eyJraWQiOiIxNzNhMGIxM2VkMTEzNjZmMWMxYTA5YzU3MjAxMzE4YSIsImFsZyI6IkVTMjU2IiwidHlwIjoiSldUIn0.eyJpc3MiOiJBeGpBbmowdDVxcFJWZ1I2YXBaN2dDaGFQYjZ5OGdObTdDa1BkNThQRDRjIiwiY29kZSI6IlNwbHhsT0JlWlFRWWJZUzZXeFNiSUEiLCJzdGF0ZSI6ImZ5WmlPTDlMZjJDZUt1TlQySnp4aUxSRGluazB1UGNkIn0.Uj6JDBuIIEvVUyGhZmX1_efwnTm_pHQuxh6kqZZjoopNK6_zUwzoB37IeppWGieW4b8VEe8VJyVXCcVY4NeHSg\">EXAMPLE JWT</a> included inside the 'response' parameter of the HTML form that contains the authorization code generated by the the Authorization Server after Wallet Instance end user authentication is completed (claim 'code') and the same 'state' and 'iss' parameters were present in the PAR Request (in URL-encoded format).",
            "content": {
              "text/html:": {
                "example": "<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.1//EN' 'http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd'>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\">\n<body onload=\"document.forms[0].submit()\">\n<noscript><p><strong>Note:</strong> Poich√© il tuo browser non supporta JavaScript, devi premere il pulsante Continua una volta per procedere.</p></noscript>\n<form action=\"https://start.wallet.example.org\" method=\"post\">\n \t<div>\n \t\t<input type=\"hidden\" name=\"response\" value=\"eyJraWQiOiIxNzNhMGIxM2VkMTEzNjZmMWMxYTA5YzU3MjAxMzE4YSIsImFsZyI6IkVTMjU2IiwidHlwIjoiSldUIn0.eyJpc3MiOiJBeGpBbmowdDVxcFJWZ1I2YXBaN2dDaGFQYjZ5OGdObTdDa1BkNThQRDRjIiwiY29kZSI6IlNwbHhsT0JlWlFRWWJZUzZXeFNiSUEiLCJzdGF0ZSI6ImZ5WmlPTDlMZjJDZUt1TlQySnp4aUxSRGluazB1UGNkIn0.Uj6JDBuIIEvVUyGhZmX1_efwnTm_pHQuxh6kqZZjoopNK6_zUwzoB37IeppWGieW4b8VEe8VJyVXCcVY4NeHSg\">\n \t</div>\n \t<noscript><div><input type=\"submit\" value=\"Continua\"></div></noscript>\n</form>\n</body>\n</html>"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_405"
                }
              }
            }
          },
          "413": {
            "description": "Payload Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_413"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_429"
                }
              }
            }
          },
          "5XX": {
            "description": "Unexpected error."
          }
        }
      }
    },
    "/token": {
      "post": {
        "tags": [
          "Authorization Server"
        ],
        "summary": "The Token Endpoint for exchanging an authorization code with an access token",
        "operationId": "tokenRequest_authorization_server",
        "parameters": [
          {
            "name": "DPoP",
            "in": "header",
            "description": "The DPoP proof JWT (in signed JWT format) presented in the request to the /token endpoint of the authorization server for issuing an access token bounded to the public key specified within the JWK header of the DPoP proof JWT. The issued DPoP-bounded access token represents the client's authorization to access to the /credential endpoint of the credential issuer for issuing a verifiable credential of type 'PersonIdentificationData'.<br /><br /><a target=\"blank\" href=\"https://raw.githubusercontent.com/it-helpers/it-wallet-helpers/0.6.0/docs/schemes/jwt_dpop_header.json\">JSON Header schema</a><br /><br /><a target=\"blank\" href=\"https://raw.githubusercontent.com/it-helpers/it-wallet-helpers/0.6.0/docs/schemes/jwt_dpop_token_endpoint.json\">JSON Payload schema</a><br/><br/><a target=\"blank\" href=\"https://jwt.io/#debugger-io?token=eyJ0eXAiOiJkcG9wK2p3dCIsImFsZyI6IkVTMjU2IiwiandrIjp7Imt0eSI6IkVDIiwieCI6IjM1bHZDOHV6MlFyV3BRSjNUVUg4dDlvOURVUk1wN3lkVTUxOFJLRGwyMGsiLCJ5IjoiSThCdVhCMmJ2eGVsekpBZDdPS2hkLVp3akNzdDA1Rng0N01iXzB1Z3JvcyIsImNydiI6IlAtMjU2In19.ewoJImp0aSI6ICJlMWozVl9iS2ljOC1MQUVBIiwKCSJodG0iOiAiUE9TVCIsCgkiaHR1IjogImh0dHBzOi8vaXQtd2FsbGV0LWVhYS1wcm92aWRlci5leGFtcGxlLml0L3Rva2VuIiwKCSJpYXQiOiAxNzEwMzQ2MzQzCn0.mIDdPx1KjBnitErOYJjvzr5EYjl8dRQlzAT30e0mhk8NZZCwAMfktzcyb1_IuEywi_VMbrWTp1gFOAxJv_uaJQ&publicKey=%7B%0A%20%20%22kty%22%3A%20%22EC%22%2C%0A%20%20%22x%22%3A%20%2235lvC8uz2QrWpQJ3TUH8t9o9DURMp7ydU518RKDl20k%22%2C%0A%20%20%22y%22%3A%20%22I8BuXB2bvxelzJAd7OKhd-ZwjCst05Fx47Mb_0ugros%22%2C%0A%20%20%22crv%22%3A%20%22P-256%22%0A%7D\">EXAMPLE ON JWT.IO</a>",
            "required": true,
            "schema": {
              "pattern": "^[A-Za-z0-9_-]{2,}(?:\\.[A-Za-z0-9_-]{2,}){2}$",
              "type": "string",
              "format": "Signed JWT",
              "example": "eyJ0eXAiOiJkcG9wK2p3dCIsImFsZyI6IkVTMjU2IiwiandrIjp7Imt0eSI6IkVDIiwieCI6IjM1bHZDOHV6MlFyV3BRSjNUVUg4dDlvOURVUk1wN3lkVTUxOFJLRGwyMGsiLCJ5IjoiSThCdVhCMmJ2eGVsekpBZDdPS2hkLVp3akNzdDA1Rng0N01iXzB1Z3JvcyIsImNydiI6IlAtMjU2In19.ewoJImp0aSI6ICJlMWozVl9iS2ljOC1MQUVBIiwKCSJodG0iOiAiUE9TVCIsCgkiaHR1IjogImh0dHBzOi8vaXQtd2FsbGV0LWVhYS1wcm92aWRlci5leGFtcGxlLml0L3Rva2VuIiwKCSJpYXQiOiAxNzEwMzQ2MzQzCn0.mIDdPx1KjBnitErOYJjvzr5EYjl8dRQlzAT30e0mhk8NZZCwAMfktzcyb1_IuEywi_VMbrWTp1gFOAxJv_uaJQ"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_400_1"
                }
              }
            }
          },
          "5XX": {
            "description": "Unexpected error."
          }
        }
      }
    },
    "/credential": {
      "post": {
        "tags": [
          "Credential Issuer"
        ],
        "summary": "The Credential Endpoint for getting an EAA Verifiable Credential presenting a valid access token",
        "operationId": "credentialRequest",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "The DPoP-bound access token (in signed JWT format) presented in the request to the /credential endpoint of the credential issuer for issuing a verifiable credential  (i.e. type 'DisabilityCard').<br /><br /><a target=\"blank\" href=\"https://raw.githubusercontent.com/it-helpers/it-wallet-helpers/0.6.0/docs/schemes/jwt_dpop_header.json\">JSON Header schema</a> <br /><br /><a target=\"blank\" href=\"https://raw.githubusercontent.com/it-helpers/it-wallet-helpers/0.6.0/docs/schemes/jwt_dpop_bound_access_token.json\">JSON Payload schema</a><br/><br/><a target=\"blank\" href=\"https://jwt.io/#debugger-io?token=eyJ0eXAiOiJkcG9wK2p3dCIsImFsZyI6IkVTMjU2IiwiandrIjp7Imt0eSI6IkVDIiwieCI6IjM1bHZDOHV6MlFyV3BRSjNUVUg4dDlvOURVUk1wN3lkVTUxOFJLRGwyMGsiLCJ5IjoiSThCdVhCMmJ2eGVsekpBZDdPS2hkLVp3akNzdDA1Rng0N01iXzB1Z3JvcyIsImNydiI6IlAtMjU2In19.ewoJImp0aSI6ICJmODU1NWNlYi1jNjVjLTQwMjUtOTM3OC1iNjY3MmI2MTQ5YWYiLAoJImlzcyI6ICJodHRwczovL2l0LXdhbGxldC1lYWEtcHJvdmlkZXIuZXhhbXBsZS5pdC90b2tlbiIsCgkic3ViIjogIk56YkxzWGg4dURDY2Q3bm9XWEZaQWZIa3hac1JHQzlYcyIsCgkiYXVkIjogImh0dHBzOi8vaXQtd2FsbGV0LWVhYS1wcm92aWRlci5leGFtcGxlLml0L2NyZWRlbnRpYWwiLAoJImlhdCI6IDE3MDU1NzAwNTUsCgkiZXhwIjogMTcwNTU3MzY1NSwKCSJqa3QiOiAia1FNVTEzTnJ2aWMyRDlJR3AydC1QaExmaUhHRUZHNVJPRUlJZXl1ZTdOTSIsCgkibmJmIjogIjE3MTAzNDYzNDMiCn0.vnMKJBR2HB0CmWdrag6lt6aNRtN8BVvXiBoENFiqKlgXK7LFKz75WRza69Z9YhAd9yxAj2lKHlBGAulOG_IcMg&publicKey=%7B%0A%20%20%22kty%22%3A%20%22EC%22%2C%0A%20%20%22x%22%3A%20%2235lvC8uz2QrWpQJ3TUH8t9o9DURMp7ydU518RKDl20k%22%2C%0A%20%20%22y%22%3A%20%22I8BuXB2bvxelzJAd7OKhd-ZwjCst05Fx47Mb_0ugros%22%2C%0A%20%20%22crv%22%3A%20%22P-256%22%0A%7D\">EXAMPLE ON JWT.IO</a>",
            "required": true,
            "schema": {
              "pattern": "^[A-Za-z0-9_-]{2,}(?:\\.[A-Za-z0-9_-]{2,}){2}$",
              "type": "string",
              "format": "Signed JWT",
              "example": "eyJ0eXAiOiJkcG9wK2p3dCIsImFsZyI6IkVTMjU2IiwiandrIjp7Imt0eSI6IkVDIiwieCI6IjM1bHZDOHV6MlFyV3BRSjNUVUg4dDlvOURVUk1wN3lkVTUxOFJLRGwyMGsiLCJ5IjoiSThCdVhCMmJ2eGVsekpBZDdPS2hkLVp3akNzdDA1Rng0N01iXzB1Z3JvcyIsImNydiI6IlAtMjU2In19.ewoJImp0aSI6ICJmODU1NWNlYi1jNjVjLTQwMjUtOTM3OC1iNjY3MmI2MTQ5YWYiLAoJImlzcyI6ICJodHRwczovL2l0LXdhbGxldC1lYWEtcHJvdmlkZXIuZXhhbXBsZS5pdC90b2tlbiIsCgkic3ViIjogIk56YkxzWGg4dURDY2Q3bm9XWEZaQWZIa3hac1JHQzlYcyIsCgkiYXVkIjogImh0dHBzOi8vaXQtd2FsbGV0LWVhYS1wcm92aWRlci5leGFtcGxlLml0L2NyZWRlbnRpYWwiLAoJImlhdCI6IDE3MDU1NzAwNTUsCgkiZXhwIjogMTcwNTU3MzY1NSwKCSJqa3QiOiAia1FNVTEzTnJ2aWMyRDlJR3AydC1QaExmaUhHRUZHNVJPRUlJZXl1ZTdOTSIsCgkibmJmIjogIjE3MTAzNDYzNDMiCn0.vnMKJBR2HB0CmWdrag6lt6aNRtN8BVvXiBoENFiqKlgXK7LFKz75WRza69Z9YhAd9yxAj2lKHlBGAulOG_IcMg"
            }
          },
          {
            "name": "DPoP",
            "in": "header",
            "description": "The DPoP proof JWT (in signed JWT format) presented with the access token in the request to the /credential endpoint of the credential issuer as proof possession of the access token sign private key.<br /><br /><a target=\"blank\" href=\"https://raw.githubusercontent.com/it-helpers/it-wallet-helpers/0.6.0/docs/schemes/jwt_dpop_header.json\">JSON Header schema</a> <br /><br /><a target=\"blank\" href=\"https://raw.githubusercontent.com/it-helpers/it-wallet-helpers/0.6.0/docs/schemes/jwt_dpop_credential_endpoint.json\">JSON Payload schema</a><br/><br/><a target=\"blank\" href=\"https://jwt.io/#debugger-io?token=eyJ0eXAiOiJkcG9wK2p3dCIsImFsZyI6IkVTMjU2IiwiandrIjp7Imt0eSI6IkVDIiwieCI6IjM1bHZDOHV6MlFyV3BRSjNUVUg4dDlvOURVUk1wN3lkVTUxOFJLRGwyMGsiLCJ5IjoiSThCdVhCMmJ2eGVsekpBZDdPS2hkLVp3akNzdDA1Rng0N01iXzB1Z3JvcyIsImNydiI6IlAtMjU2In19.ewogICJqdGkiOiAiZTFqM1ZfYktpYzgtTEFFQiIsCiAgImlhdCI6IDE3MTAzNDYzNDMsCiAgImh0dSI6ICJodHRwczovL2l0LXdhbGxldC1lYWEtcHJvdmlkZXIuZXhhbXBsZS5pdC9jcmVkZW50aWFsIiwKICAiaHRtIjogIlBPU1QiLAogICJpYXQiOiAxNzEwMzQ2MzQzLAogICJhdGgiOiAiZlVIeU8ycjJaM0RaNTNFc05yV0JiMHhXWG9hTnk1OUlpS0NBcWtzbVFFbyIKfQ.vnMKJBR2HB0CmWdrag6lt6aNRtN8BVvXiBoENFiqKlgXK7LFKz75WRza69Z9YhAd9yxAj2lKHlBGAulOG_IcMg&publicKey=%7B%0A%20%20%22kty%22%3A%20%22EC%22%2C%0A%20%20%22x%22%3A%20%2235lvC8uz2QrWpQJ3TUH8t9o9DURMp7ydU518RKDl20k%22%2C%0A%20%20%22y%22%3A%20%22I8BuXB2bvxelzJAd7OKhd-ZwjCst05Fx47Mb_0ugros%22%2C%0A%20%20%22crv%22%3A%20%22P-256%22%0A%7D\">EXAMPLE ON JWT.IO</a>",
            "required": true,
            "schema": {
              "pattern": "^[A-Za-z0-9_-]{2,}(?:\\.[A-Za-z0-9_-]{2,}){2}$",
              "type": "string",
              "format": "Signed JWT",
              "example": "eyJ0eXAiOiJkcG9wK2p3dCIsImFsZyI6IkVTMjU2IiwiandrIjp7Imt0eSI6IkVDIiwieCI6IjM1bHZDOHV6MlFyV3BRSjNUVUg4dDlvOURVUk1wN3lkVTUxOFJLRGwyMGsiLCJ5IjoiSThCdVhCMmJ2eGVsekpBZDdPS2hkLVp3akNzdDA1Rng0N01iXzB1Z3JvcyIsImNydiI6IlAtMjU2In19.ewogICJqdGkiOiAiZTFqM1ZfYktpYzgtTEFFQiIsCiAgImlhdCI6IDE3MTAzNDYzNDMsCiAgImh0dSI6ICJodHRwczovL2l0LXdhbGxldC1lYWEtcHJvdmlkZXIuZXhhbXBsZS5pdC9jcmVkZW50aWFsIiwKICAiaHRtIjogIlBPU1QiLAogICJpYXQiOiAxNzEwMzQ2MzQzLAogICJhdGgiOiAiZlVIeU8ycjJaM0RaNTNFc05yV0JiMHhXWG9hTnk1OUlpS0NBcWtzbVFFbyIKfQ.vnMKJBR2HB0CmWdrag6lt6aNRtN8BVvXiBoENFiqKlgXK7LFKz75WRza69Z9YhAd9yxAj2lKHlBGAulOG_IcMg"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK  <br /><br /> The response is a JSON object that contains the verifiable credential (VC) requested  into the claim 'credential'.<br /> (<a target=\"blank\" href=\"https://jwt.io/#debugger-io?token=ewogICAidHlwIjoidmMrc2Qtand0IiwKICAgImFsZyI6IkVTMjU2IiwKICAgImtpZCI6ImVOTi1nNWk2Q25MS2NsdFFCcDZhYmJpb0dNYnpNNm11VzN2dXh3NnVoODgiCn0.ewogICJfc2QiOiBbCiAgICAiei14NGJwTWF1b1FlSGVoUUNzWmRCUjhieGIzQkdyZ3R2WHp4X2o1ak00dyIsCiAgICAiSzRxRUhRemRGczVzNms1ZGo2Z0pZSWhCakFGdk5VY3NBZkZkcXJXSC1UcyIsCiAgICAieUIzN05nQ1JSaE5ET1lqZE9WdXF3V2hlZFZ3U2FwMjctTkkyS2VVU1VFZyIsCiAgICAiZXNIS0YwRTVXNW1ESVE1OFhRNFFQYTVvNDI1enJMR1E4czZybjQzcGVHNCIsCiAgICAieUhRbmN5SUdGNUwwV0xsUDVIa28wdFRZNlZNV1phT1BTSzFjRWQ1RGMyRSIsCgkia3JnZWZsZDhOb2o0a0xPZFZ4VjNJV0tUVEs5SXFlY2RTN3NyRUIzNXpPUSIsCgkic2QzY1gxNUlvM1dJRkZPWEJKRkE3Mzg4YjIyTVgyam9JN0k3UGlDZTIwIgogIF0sCiAgImV4cCI6IDE4ODMwMDAwMDAsCiAgImlzcyI6ICJodHRwczovL2VhYS1wcm92aWRlci5pcHpzLml0IiwKICAic3ViIjogIk56YkxzWGg4dURDY2Q3bm9XWEZaQWZIa3hac1JHQzlYcyIsCiAgInN0YXR1cyI6IHsKICAgICJzdGF0dXNfYXR0ZXN0YXRpb24iOiB7CiAgICAgICJjcmVkZW50aWFsX2hhc2hfYWxnIjogInNoYS0yNTYiCiAgICB9CiAgfSwKICAidmN0IjogIkRpc2FiaWxpdHlDYXJkIiwKICAiX3NkX2FsZyI6ICJzaGEtMjU2IiwKICAiY25mIjogewogICAgImp3ayI6IHsKICAgICAgImt0eSI6ICJFQyIsCiAgICAgICJjcnYiOiAiUC0yNTYiLAogICAgICAieCI6ICJUQ0FFUjE5WnZ1M09IRjRqNFc0dmZTVm9ISVAxSUxpbERsczd2Q2VHZW1jIiwKICAgICAgInkiOiAiWnhqaVdXYlpNUUdIVldLVlE0aGJTSWlyc1ZmdWVjQ0U2dDRqVDlGMkhaUSIKICAgIH0KICB9Cn0.MrbtZznuS3fnYugwMTFRi0AMTS5rKlLvqwbRRZWeqkA8EpSnEHtTUhA4bR-QF0sInThLeLFS5C4pVf414gy1UT-IS2vx0xksnXaUnMqIaPOF8ElRPTwUYI8tXeV8LM_wsmV61TtZadHOn6YHpju-jHEtMcD80ddwzJhSq4jig-lBVH_Ud-KWIKtN60SJ1uHxFar1Jdhoi6AlHI5u3nIzbmKG6a87qN00rqtcL2LE11IhDh3yg8XqbszqEaRftLtPl833_YD5t4tO0xiU25zq_TAWt5L_5ea7JjY6k-zzo-X2GEedRDRFSfmG6Nbk4ZvZ16ildG-pjiXLS6bpPQ1nvg~WyJSaHN5WVhKY0pkbUEyRVJOUUJNYlBRIiwic2VyaWFsZUNhcnRhIiwiMDAwMDAwMDIiXQ~WyJHdWg1Y19pVG5zVVdKSi1rWU9IenV3IiwiY29nbm9tZSIsIlJvc3NpIl0~WyJCcWlVR212MnJHaDV3QjJNTGFpakpBIiwibm9tZSIsIk1hcmlvIl0~WyJLNlY0WFUzZXo2Z0NUOG40NWhHT3J3IiwiZGF0YU5hc2NpdGEiLCIxOTgwLTAxLTEwIl0~WyJadWxDR3dEZHBZYXFsSW5hYVNrakJnIiwiZGF0YVNjYWRlbnphIiwiMjAzMC0wMS0xMCJd~\">VERIFIABLE CREDENTIAL (VC) DisabilityCard EXAMPLE ON JWT.IO</a>) <br /><br /> VERIFIABLE CREDENTIAL (VC) Header is a JSON object with this <a target=\"blank\" href=\"https://raw.githubusercontent.com/it-helpers/it-wallet-helpers/0.6.0/docs/schemes/jwt_vc_sd_header.json\">JSON schema</a> <br /><br /> VERIFIABLE CREDENTIAL (VC) Payload is a JSON object with this <a target=\"blank\" href=\"https://raw.githubusercontent.com/it-helpers/it-wallet-helpers/0.6.0/docs/schemes/jwt_vc_sd.json\">JSON schema</a> <br /><br /> The verifiable credential (VC) is a digitally signed JWT carrying the information about a subject in clear text and containing SHA256 digests/thumbprints over the selectively disclosable claims with the Disclosures outside the document, the format is defined in <a target=\"blank\" href=\"https://datatracker.ietf.org/doc/html/draft-ietf-oauth-selective-disclosure-jwt-07\">draft-ietf-oauth-selective-disclosure-jwt-07</a> specification (SD-JWT).<br /><br />The SD-JWT and the Disclosures are issued as a single concatenated string, with the tilde ~ serving as a separator.<br/>The first block comprises the SD-JWT, while the remainder constitutes the Disclosures:<br /> <br/><SD-JWT> ~ <Disclosure 1> ~ <Disclosure 2> ~ ... <br/><br/>SD-JWT=<base64-url-encoded(header)>.<base64-url-encoded(payload)>.<base64-url-encoded(signature)><br/><br/> <table border=\"1\" bgcolor=\"white\" ><tr><td><font size=\"2\"> <b>Disclosure is created as follow:</b> <br/> <br/> 1) Create an array of 3 elements in this order: <b>salt</b> (base64url-encode minimum 128 bits of cryptographically secure pseudorandom data), <b>claim name</b>, <b>claim value</b>; <br/> <br/> 2) JSON-encode the array generated at the step 1, producing an UTF-8 string: <br> <i>$ echo -n '[\"RhsyYXJcJdmA2ERNQBMbPQ\",\"serialeCarta\",\"00000002\"]' </i> <br> --> <b>[\"RhsyYXJcJdmA2ERNQBMbPQ\",\"serialeCarta\",\"00000002\"]</b> <br/> <br/> 3) base64url-encode the byte representation of the UTF-8 string produced at the step 2 (the result is the Disclosure)<br> <i>$ echo -n '[\"RhsyYXJcJdmA2ERNQBMbPQ\",\"serialeCarta\",\"00000002\"]' | openssl base64 -a -A | sed 's/+/-/g; s,/,_,g; s/=//g' </i> <br> --> <b> WyJSaHN5WVhKY0pkbUEyRVJOUUJNYlBRIiwic2VyaWFsZUNhcnRhIiwiMDAwMDAwMDIiXQ</b> <br><br>In the example given here, within the claim <b>&#95;sd</b> of the payload of the SD-JWT we found the base64url-encode of the SHA256 digest of the disclosure 'WyJSaHN5WVhKY0pkbUEyRVJOUUJNYlBRIiwic2VyaWFsZUNhcnRhIiwiMDAwMDAwMDIiXQ' <br>$ echo -n 'WyJSaHN5WVhKY0pkbUEyRVJOUUJNYlBRIiwic2VyaWFsZUNhcnRhIiwiMDAwMDAwMDIiXQ'| openssl sha256 -binary | openssl base64 -a -A | sed 's/+/-/g; s,/,_,g; s/=//g' <br> --> <b>z-x4bpMauoQeHehQCsZdBR8bxb3BGrgtvXzx_j5jM4w</b> <br><br>{<br>  \"_sd\": [<br>    \"<b>z-x4bpMauoQeHehQCsZdBR8bxb3BGrgtvXzx_j5jM4w</b>\",<br>    \"K4qEHQzdFs5s6k5dj6gJYIhBjAFvNUcsAfFdqrWH-Ts\",<br>    \"yB37NgCRRhNDOYjdOVuqwWhedVwSap27-NI2KeUSUEg\", <br>    \"esHKF0E5W5mDIQ58XQ4QPa5o425zrLGQ8s6rn43peG4\", <br>    \"yHQncyIGF5L0WLlP5Hko0tTY6VMWZaOPSK1cEd5Dc2E\",  <br>   \"krgefld8Noj4kLOdVxV3IWKTTK9IqecdS7srEB35zOQ\",  <br>  \"sd3cX15Io3WIFFOXBJFA7388b22MX2joI7I7PiCe20\"  <br>  ], <br> \"exp\": 1883000000,<br>  \"iss\": \"https://issuer.example.org\",<br>  \"sub\": \"NzbLsXh8uDCcd7noWXFZAfHkxZsRGC9Xs\",<br>  \"status\": {<br>    \"status_attestation\": {<br>      \"credential_hash_alg\": \"sha-256\"<br>    }<br>  },<br>  \"vct\": \"DisabilityCard\",<br>  \"_sd_alg\": \"sha-256\",<br>  \"cnf\": {<br>    \"jwk\": {<br>      \"kty\": \"EC\",<br>      \"crv\": \"P-256\",<br>      \"x\": \"TCAER19Zvu3OHF4j4W4vfSVoHIP1ILilDls7vCeGemc\",<br>      \"y\": \"ZxjiWWbZMQGHVWKVQ4hbSIirsVfuecCE6t4jT9F2HZQ\"<br>    }<br>  }<br>}<br></font></td></tr></table>",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "Unexpected error."
          }
        }
      }
    },
    "/.well-known/openid-federation": {
      "get": {
        "tags": [
          "OpenID Federation"
        ],
        "summary": "The OpenID Federation Endpoint for getting an Entity Configuration of the EAA Provider.",
        "operationId": "federationEntityConfigurationRequest_openid_federation",
        "description": "<ol><li><b>Wallet Instance</b> calls the /.well-know/openid-federation OpenID Federation service of the EAA Provider (Federation Entity Configuration Request) to obtain its <a target=\"blank\" href=\"https://italia.github.io/eudi-wallet-it-docs/v0.6.0/en/trust.html#entity-configuration\">Entity Configuration</a>;</li><li><b>OpenID Federation Service</b> retrieves its federation metadata from the local database;</li><li><b>OpenID Federation Service</b> creates a signed JWT containing the federation metadata (<a target=\"blank\" href=\"https://italia.github.io/eudi-wallet-it-docs/v0.6.0/en/trust.html#entity-configuration\">Entity Configuration</a>);</li><li><b>OpenID Federation Service</b> creates and sends the Federation Entity Configuration Response containing the JWT with the <a target=\"blank\" href=\"https://italia.github.io/eudi-wallet-it-docs/v0.6.0/en/trust.html#entity-configuration\">Entity Configuration</a>.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK  <br/><br/><a target=\"blank\" href=\"https://jwt.io/#debugger-io?token=eyJhbGciOiJFUzI1NiIsImtpZCI6IkZBTkZTM1luQzl0amlDYWl2aFdMVlVKM0F4d0dHel85OHVSRmFxTUVFcyIsInR5cCI6ImVudGl0eS1zdGF0ZW1lbnQrand0In0..h-VsgOMMpnwTZNHcm5e_amXhBvqH4teRfh5CUT3WbRJb2fRIgQU6yBiGaZXFkcR1dYodQNqy3Ds4Hu15Yn6ZWg&publicKey=%7B%0A%20%20%22kty%22%3A%20%22EC%22%2C%0A%20%20%22x%22%3A%20%2235lvC8uz2QrWpQJ3TUH8t9o9DURMp7ydU518RKDl20k%22%2C%0A%20%20%22y%22%3A%20%22I8BuXB2bvxelzJAd7OKhd-ZwjCst05Fx47Mb_0ugros%22%2C%0A%20%20%22crv%22%3A%20%22P-256%22%0A%7D\">EXAMPLE ON JWT.IO</a>",
            "content": {
              "application/entity-statement+jwt": {
                "schema": {
                  "pattern": "^[A-Za-z0-9_-]{2,}(?:\\.[A-Za-z0-9_-]{2,}){2}$",
                  "type": "string",
                  "description": "Metadata that an Entity publishes about itself (in signed JWT format), verifiable with a trusted third party (Superior Entity). It's called Entity Configuration. (<a target=\"blank\" href=\"https://raw.githubusercontent.com/it-helpers/it-wallet-helpers/0.6.0/docs/schemes/jwt_entity-configuration_eid_provider.json\">View the JSON schema</a>).",
                  "format": "A digitally signed JWT",
                  "example": "eyJhbGciOiJFUzI1NiIsImtpZCI6IkZBTkZTM1luQzl0amlDYWl2aFdMVlVKM0F4d0dHel85OHVSRmFxTUVFcyIsInR5cCI6ImVudGl0eS1zdGF0ZW1lbnQrand0In0.ewoJImV4cCI6ICIxNjQ5NjEwMjQ5IiwKCSJpYXQiOiAiMTY0OTQzNzQ0OSIsCgkiaXNzIjogImh0dHBzOi8vaXQtd2FsbGV0LWVhYS1wcm92aWRlci5leGFtcGxlLml0IiwKCSJzdWIiOiAiaHR0cHM6Ly9pdC13YWxsZXQtZWFhLXByb3ZpZGVyLmV4YW1wbGUuaXQiLAoJImp3a3MiOiB7CgkJImtleXMiOiBbCgkJCXsKCQkJCSJrdHkiOiAiUlNBIiwKCQkJCSJ1c2UiOiAic2lnIiwKCQkJCSJuIjogIjFUYS1zRSAuLi4iLAoJCQkJImUiOiAiQVFBQiIsCgkJCQkia2lkIjogIkZBTkZTM1luQzl0amlDYWl2aFdMVlVKM0F4d0dHel85OHVSRmFxTUVFcyIKCQkJfQoJCV0KCX0sCgkiYXV0aG9yaXR5X2hpbnRzIjogWwoJCSJodHRwczovL3N1cGVyaW9yLWVudGl0eS5leGFtcGxlLm9yZy9mZWRlcmF0aW9uIgoJXSwKCSJtZXRhZGF0YSI6IHsKCQkiZmVkZXJhdGlvbl9lbnRpdHkiOiB7CgkJCSJvcmdhbml6YXRpb25fbmFtZSI6ICJQSUQgUHJvdmlkZXIgT3JnYW5pemF0aW9uIEV4YW1wbGUiLAoJCQkiaG9tZXBhZ2VfdXJpIjogImh0dHBzOi8vaXQtd2FsbGV0LWVhYS1wcm92aWRlci5leGFtcGxlLml0IiwKCQkJInBvbGljeV91cmkiOiAiaHR0cHM6Ly9pdC13YWxsZXQtZWFhLXByb3ZpZGVyLmV4YW1wbGUuaXQvcHJpdmFjeV9wb2xpY3kiLAoJCQkidG9zX3VyaSI6ICJodHRwczovL2l0LXdhbGxldC1lYWEtcHJvdmlkZXIuZXhhbXBsZS5pdC9pbmZvX3BvbGljeSIsCgkJCSJsb2dvX3VyaSI6ICJodHRwczovL2l0LXdhbGxldC1lYWEtcHJvdmlkZXIuZXhhbXBsZS5pdC9sb2dvLnN2ZyIsCgkJCSJjb250YWN0cyI6IFsKCQkJCSJvcHNAcGlkLXByb3ZpZGVyLmV4YW1wbGUub3JnIgoJCQldLAoJCQkiZmVkZXJhdGlvbl9yZXNvbHZlX2VuZHBvaW50IjogImh0dHBzOi8vaXQtd2FsbGV0LWVhYS1wcm92aWRlci5leGFtcGxlLml0L3Jlc29sdmUiCgkJfSwKCQkib2F1dGhfYXV0aG9yaXphdGlvbl9zZXJ2ZXIiOiB7CgkJCSJhdXRob3JpemF0aW9uX2VuZHBvaW50IjogImh0dHBzOi8vaXQtd2FsbGV0LWVhYS1wcm92aWRlci5leGFtcGxlLml0L2F1dGhvcml6ZSIsCgkJCSJwdXNoZWRfYXV0aG9yaXphdGlvbl9yZXF1ZXN0X2VuZHBvaW50IjogImh0dHBzOi8vaXQtd2FsbGV0LWVhYS1wcm92aWRlci5leGFtcGxlLml0L2FzL3BhciIsCgkJCSJkcG9wX3NpZ25pbmdfYWxnX3ZhbHVlc19zdXBwb3J0ZWQiOiBbCgkJCQkiRVMyNTYiLAoJCQkJIkVTNTEyIgoJCQldLAoJCQkidG9rZW5fZW5kcG9pbnQiOiAiaHR0cHM6Ly9pdC13YWxsZXQtZWFhLXByb3ZpZGVyLmV4YW1wbGUuaXQvdG9rZW4iLAoJCQkiY2xpZW50X3JlZ2lzdHJhdGlvbl90eXBlc19zdXBwb3J0ZWQiOiBbCgkJCQkiYXV0b21hdGljIgoJCQldLAoJCQkiY29kZV9jaGFsbGVuZ2VfbWV0aG9kc19zdXBwb3J0ZWQiOiBbCgkJCQkiUzI1NiIKCQkJXSwKCQkJImF1dGhvcml6YXRpb25fZGV0YWlsc190eXBlc19zdXBwb3J0ZWQiOiBbCgkJCQkib3BlbmlkX2NyZWRlbnRpYWwiCgkJCV0sCgkJCSJhY3JfdmFsdWVzX3N1cHBvcnRlZCI6IFsKCQkJCSJodHRwczovL3d3dy5zcGlkLmdvdi5pdC9TcGlkTDIiLAoJCQkJImh0dHBzOi8vd3d3LnNwaWQuZ292Lml0L1NwaWRMMyIKCQkJXSwKCQkJImdyYW50X3R5cGVzX3N1cHBvcnRlZCI6IFsKCQkJCSJhdXRob3JpemF0aW9uX2NvZGUiCgkJCV0sCgkJCSJpc3N1ZXIiOiAiaHR0cHM6Ly9pdC13YWxsZXQtZWFhLXByb3ZpZGVyLmV4YW1wbGUuaXQiLAoJCQkiandrcyI6IHsKCQkJCSJrZXlzIjogWwoJCQkJCXsKCQkJCQkJImt0eSI6ICJFQyIsCgkJCQkJCSJraWQiOiAiRkFORlMzWW5DOXRqaUNhaXZoV0xWVUozQXh3R0d6Xzk4dVJGYXFNRUVzIgoJCQkJCX0KCQkJCV0KCQkJfSwKCQkJInNjb3Blc19zdXBwb3J0ZWQiOiBbCgkJCQkiUGVyc29uSWRlbnRpZmljYXRpb25EYXRhIgoJCQldLAoJCQkicmVxdWVzdF9wYXJhbWV0ZXJfc3VwcG9ydGVkIjogdHJ1ZSwKCQkJInJlcXVlc3RfdXJpX3BhcmFtZXRlcl9zdXBwb3J0ZWQiOiBmYWxzZSwKCQkJInJlc3BvbnNlX3R5cGVzX3N1cHBvcnRlZCI6IFsKCQkJCSJjb2RlIgoJCQldLAoJCQkic3ViamVjdF90eXBlc19zdXBwb3J0ZWQiOiBbCgkJCQkicGFpcndpc2UiCgkJCV0sCgkJCSJ0b2tlbl9lbmRwb2ludF9hdXRoX21ldGhvZHNfc3VwcG9ydGVkIjogWwoJCQkJImF0dGVzdF9qd3RfY2xpZW50X2F1dGgiCgkJCV0sCgkJCSJ0b2tlbl9lbmRwb2ludF9hdXRoX3NpZ25pbmdfYWxnX3ZhbHVlc19zdXBwb3J0ZWQiOiBbCgkJCQkiRVMyNTYiLAoJCQkJIkVTMzg0IiwKCQkJCSJFUzUxMiIKCQkJXSwKCQkJInJlcXVlc3Rfb2JqZWN0X3NpZ25pbmdfYWxnX3ZhbHVlc19zdXBwb3J0ZWQiOiBbCgkJCQkiRVMyNTYiLAoJCQkJIkVTMzg0IiwKCQkJCSJFUzUxMiIKCQkJXQoJCX0sCgkJIm9wZW5pZF9jcmVkZW50aWFsX2lzc3VlciI6IHsKCQkJImNyZWRlbnRpYWxfaXNzdWVyIjogImh0dHBzOi8vaXQtd2FsbGV0LWVhYS1wcm92aWRlci5leGFtcGxlLml0IiwKCQkJImNyZWRlbnRpYWxfZW5kcG9pbnQiOiAiaHR0cHM6Ly9pdC13YWxsZXQtZWFhLXByb3ZpZGVyLmV4YW1wbGUuaXQvY3JlZGVudGlhbCIsCgkJCSJyZXZvY2F0aW9uX2VuZHBvaW50IjogImh0dHBzOi8vaXQtd2FsbGV0LWVhYS1wcm92aWRlci5leGFtcGxlLml0L3Jldm9rZSIsCgkJCSJzdGF0dXNfYXR0ZXN0YXRpb25fZW5kcG9pbnQiOiAiaHR0cHM6Ly9pdC13YWxsZXQtZWFhLXByb3ZpZGVyLmV4YW1wbGUuaXQvc3RhdHVzIiwKCQkJImRpc3BsYXkiOiBbCgkJCQl7CgkJCQkJIm5hbWUiOiAiUElEIFByb3ZpZGVyIEl0YWxpYW5vIGRpIGVzZW1waW8iLAoJCQkJCSJsb2NhbGUiOiAiaXQtSVQiCgkJCQl9LAoJCQkJewoJCQkJCSJuYW1lIjogIkV4YW1wbGUgUElEIFByb3ZpZGVyIiwKCQkJCQkibG9jYWxlIjogImVuLVVTIiwKCQkJCQkibG9nbyI6IHsKCQkJCQkJInVybCI6ICJodHRwczovL2l0LXdhbGxldC1lYWEtcHJvdmlkZXIuZXhhbXBsZS5pdC9wdWJsaWMvbG9nby5zdmciLAoJCQkJCQkiYWx0X3RleHQiOiAibG9nbyBkaSBxdWVzdG8gUElEIFByb3ZpZGVyIgoJCQkJCX0KCQkJCX0KCQkJXSwKCQkJImp3a3MiOiB7CgkJCQkia2V5cyI6IFsKCQkJCQl7CgkJCQkJCSJjcnYiOiAiUC0yNTYiLAoJCQkJCQkia3R5IjogIkVDIiwKCQkJCQkJIngiOiAibmV3SzVxRFlNZWtyQ1BQTy15RVlUZEpWV0pNVHphc01hdnQydm0xTWItQSIsCgkJCQkJCSJ5IjogIlZpelhhTE82ZHplZXNaUHhmcEdaYWJUSzNjVFh0QlViSWlRcG1pWVJ0U0UiLAoJCQkJCQkia2lkIjogImZmMGJkZWQwNDVmZTYzZmU1ZDFkNjRkZDgzYjU2N2UwIgoJCQkJCX0KCQkJCV0KCQkJfSwKCQkJImNyZWRlbnRpYWxfY29uZmlndXJhdGlvbnNfc3VwcG9ydGVkIjogWwoJCQkJewoJCQkJCSJmb3JtYXQiOiAidmMrc2Qtand0IiwKCQkJCQkiY3J5cHRvZ3JhcGhpY19iaW5kaW5nX21ldGhvZHNfc3VwcG9ydGVkIjogWwoJCQkJCQkiandrIgoJCQkJCV0sCgkJCQkJImNyZWRlbnRpYWxfc2lnbmluZ19hbGdfdmFsdWVzX3N1cHBvcnRlZCI6IFsKCQkJCQkJIkVTMjU2IiwKCQkJCQkJIkVTMzg0IiwKCQkJCQkJIkVTNTEyIgoJCQkJCV0sCgkJCQkJInByb29mX3R5cGVzX3N1cHBvcnRlZCI6IHsKCQkJCQkJImp3dCI6IHsKCQkJCQkJCSJwcm9vZl9zaWduaW5nX2FsZ192YWx1ZXNfc3VwcG9ydGVkIjogWwoJCQkJCQkJCSJFUzI1NiIKCQkJCQkJCV0KCQkJCQkJfQoJCQkJCX0sCgkJCQkJImRpc3BsYXkiOiBbCgkJCQkJCXsKCQkJCQkJCSJuYW1lIjogIlBJRCBJdGFsaWFubyBkaSBlc2VtcGlvIiwKCQkJCQkJCSJsb2NhbGUiOiAiaXQtSVQiLAoJCQkJCQkJImxvZ28iOiB7CgkJCQkJCQkJInVybCI6ICJodHRwczovL2l0LXdhbGxldC1lYWEtcHJvdmlkZXIuZXhhbXBsZS5pdC9wdWJsaWMvbG9nby5zdmciLAoJCQkJCQkJCSJhbHRfdGV4dCI6ICJsb2dvIGRpIHF1ZXN0YSBDcmVkZW56aWFsZSIKCQkJCQkJCX0sCgkJCQkJCQkiYmFja2dyb3VuZF9jb2xvciI6ICIjMTIxMDdjIiwKCQkJCQkJCSJ0ZXh0X2NvbG9yIjogIiNGRkZGRkYiCgkJCQkJCX0sCgkJCQkJCXsKCQkJCQkJCSJuYW1lIjogIkV4YW1wbGUgSXRhbGlhbiBQSUQiLAoJCQkJCQkJImxvY2FsZSI6ICJlbi1VUyIsCgkJCQkJCQkibG9nbyI6IHsKCQkJCQkJCQkidXJsIjogImh0dHBzOi8vaXQtd2FsbGV0LWVhYS1wcm92aWRlci5leGFtcGxlLml0L3B1YmxpYy9sb2dvLnN2ZyIsCgkJCQkJCQkJImFsdF90ZXh0IjogIlRoZSBsb2dvIG9mIHRoaXMgY3JlZGVudGlhbCIKCQkJCQkJCX0sCgkJCQkJCQkiYmFja2dyb3VuZF9jb2xvciI6ICIjMTIxMDdjIiwKCQkJCQkJCSJ0ZXh0X2NvbG9yIjogIiNGRkZGRkYiCgkJCQkJCX0KCQkJCQldLAoJCQkJCSJjcmVkZW50aWFsX2RlZmluaXRpb24iOiB7CgkJCQkJCSJ0eXBlIjogWwoJCQkJCQkJIkRpc2FiaWxpdHlDYXJkIiwgIlBhdGVudGUiLCAiVGVzc2VyYVNhbml0YXJpYSIKCQkJCQkJXSwKCQkJCQkJInZlcmlmaWNhdGlvbiI6IHsKCQkJCQkJCSJ0cnVzdF9mcmFtZXdvcmsiOiAiZWlkYXMiLAoJCQkJCQkJImFzc3VyYW5jZV9sZXZlbCI6ICJoaWdoIiwKCQkJCQkJCSJldmlkZW5jZSI6IFsKCQkJCQkJCQl7CgkJCQkJCQkJCSJ0eXBlIjogImVsZWN0cm9uaWNfcmVjb3JkIiwKCQkJCQkJCQkJInJlY29yZCI6IHsKCQkJCQkJCQkJCSJ0eXBlIjogImh0dHBzOi8vZXVkaS53YWxsZXQuY2llLmdvdi5pdCIsCgkJCQkJCQkJCQkic291cmNlIjogewoJCQkJCQkJCQkJCSJvcmdhbml6YXRpb25fbmFtZSI6ICJNaW5pc3Rlcm8gZGVsbCdJbnRlcm5vIiwKCQkJCQkJCQkJCQkib3JnYW5pemF0aW9uX2lkIjogInVybjpldWRpOml0Om9yZ2FuaXphdGlvbl9pZDppcGFfY29kZTptX2l0IiwKCQkJCQkJCQkJCQkiY291bnRyeV9jb2RlIjogIklUIgoJCQkJCQkJCQkJfQoJCQkJCQkJCQl9CgkJCQkJCQkJfQoJCQkJCQkJXQoJCQkJCQl9LAoJCQkJCQkiY3JlZGVudGlhbFN1YmplY3QiOiB7CgkJCQkJCQkiZ2l2ZW5fbmFtZSI6IHsKCQkJCQkJCQkibWFuZGF0b3J5IjogdHJ1ZSwKCQkJCQkJCQkiZGlzcGxheSI6IFsKCQkJCQkJCQkJewoJCQkJCQkJCQkJIm5hbWUiOiAiQ3VycmVudCBGaXJzdCBOYW1lIiwKCQkJCQkJCQkJCSJsb2NhbGUiOiAiZW4tVVMiCgkJCQkJCQkJCX0sCgkJCQkJCQkJCXsKCQkJCQkJCQkJCSJuYW1lIjogIk5vbWUiLAoJCQkJCQkJCQkJImxvY2FsZSI6ICJpdC1JVCIKCQkJCQkJCQkJfQoJCQkJCQkJCV0KCQkJCQkJCX0sCgkJCQkJCQkiZmFtaWx5X25hbWUiOiB7CgkJCQkJCQkJIm1hbmRhdG9yeSI6IHRydWUsCgkJCQkJCQkJImRpc3BsYXkiOiBbCgkJCQkJCQkJCXsKCQkJCQkJCQkJCSJuYW1lIjogIkN1cnJlbnQgRmFtaWx5IE5hbWUiLAoJCQkJCQkJCQkJImxvY2FsZSI6ICJlbi1VUyIKCQkJCQkJCQkJfSwKCQkJCQkJCQkJewoJCQkJCQkJCQkJIm5hbWUiOiAiQ29nbm9tZSIsCgkJCQkJCQkJCQkibG9jYWxlIjogIml0LUlUIgoJCQkJCQkJCQl9CgkJCQkJCQkJXQoJCQkJCQkJfSwKCQkJCQkJCSJiaXJ0aF9kYXRlIjogewoJCQkJCQkJCSJtYW5kYXRvcnkiOiB0cnVlLAoJCQkJCQkJCSJkaXNwbGF5IjogWwoJCQkJCQkJCQl7CgkJCQkJCQkJCQkibmFtZSI6ICJEYXRlIG9mIEJpcnRoIiwKCQkJCQkJCQkJCSJsb2NhbGUiOiAiZW4tVVMiCgkJCQkJCQkJCX0sCgkJCQkJCQkJCXsKCQkJCQkJCQkJCSJuYW1lIjogIkRhdGEgZGkgTmFzY2l0YSIsCgkJCQkJCQkJCQkibG9jYWxlIjogIml0LUlUIgoJCQkJCQkJCQl9CgkJCQkJCQkJXQoJCQkJCQkJfSwKCQkJCQkJCSJ1bmlxdWVfaWQiOiB7CgkJCQkJCQkJIm1hbmRhdG9yeSI6IHRydWUsCgkJCQkJCQkJImRpc3BsYXkiOiBbCgkJCQkJCQkJCXsKCQkJCQkJCQkJCSJuYW1lIjogIlVuaXF1ZSBJZGVudGlmaWVyIiwKCQkJCQkJCQkJCSJsb2NhbGUiOiAiZW4tVVMiCgkJCQkJCQkJCX0sCgkJCQkJCQkJCXsKCQkJCQkJCQkJCSJuYW1lIjogIklkZW50aWZpY2F0aXZvIHVuaXZvY28iLAoJCQkJCQkJCQkJImxvY2FsZSI6ICJpdC1JVCIKCQkJCQkJCQkJfQoJCQkJCQkJCV0KCQkJCQkJCX0sCgkJCQkJCQkidGF4X2lkX2NvZGUiOiB7CgkJCQkJCQkJIm1hbmRhdG9yeSI6IHRydWUsCgkJCQkJCQkJImRpc3BsYXkiOiBbCgkJCQkJCQkJCXsKCQkJCQkJCQkJCSJuYW1lIjogIlRheCBJZCBOdW1iZXIiLAoJCQkJCQkJCQkJImxvY2FsZSI6ICJlbi1VUyIKCQkJCQkJCQkJfSwKCQkJCQkJCQkJewoJCQkJCQkJCQkJIm5hbWUiOiAiQ29kaWNlIEZpc2NhbGUiLAoJCQkJCQkJCQkJImxvY2FsZSI6ICJpdC1JVCIKCQkJCQkJCQkJfQoJCQkJCQkJCV0KCQkJCQkJCX0KCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJXQoJCX0KCX0KfQ.h-VsgOMMpnwTZNHcm5e_amXhBvqH4teRfh5CUT3WbRJb2fRIgQU6yBiGaZXFkcR1dYodQNqy3Ds4Hu15Yn6ZWg"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_404"
                }
              }
            }
          },
          "5XX": {
            "description": "Unexpected error."
          }
        }
      }
    },
    "/status": {
      "post": {
        "summary": "The Credential Status Attestation Endpoint for getting a status attestation of an EAA Verifiable Credential",
        "tags": [
          "Credential Issuer"
        ],
        "operationId": "statusRequest_credential_issuer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The error code",
                      "example": "invalid_request"
                    },
                    "error_description": {
                      "type": "string",
                      "description": "Text in human-readable form providing further details to clarify the nature of the error encountered",
                      "example": "The signature of credential_pop JWT is not valid"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The error code",
                      "example": "not_found"
                    },
                    "error_description": {
                      "type": "string",
                      "description": "Text in human-readable form providing further details to clarify the nature of the error encountered",
                      "example": "The Digital Credential can not be found by the Issuer"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The error code",
                      "example": "internal_server_error"
                    },
                    "error_description": {
                      "type": "string",
                      "description": "Text in human-readable form providing further details to clarify the nature of the error encountered",
                      "example": "The Issuer encountered an internal problem."
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The error code",
                      "example": "service_unavaible"
                    },
                    "error_description": {
                      "type": "string",
                      "description": "Text in human-readable form providing further details to clarify the nature of the error encountered",
                      "example": "The Issuer is temporary unavailable."
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/revoke": {
      "post": {
        "summary": "The Revoke Endpoint for revoking an EAA Verifiable Credential",
        "tags": [
          "Credential Issuer"
        ],
        "operationId": "revokeRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevocationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The error code",
                      "example": "invalid_request"
                    },
                    "error_description": {
                      "type": "string",
                      "description": "Text in human-readable form providing further details to clarify the nature of the error encountered",
                      "example": "The issuer cannot fulfill the request because of invalid parameters"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The error code",
                      "example": "not_found"
                    },
                    "error_description": {
                      "type": "string",
                      "description": "Text in human-readable form providing further details to clarify the nature of the error encountered",
                      "example": "The Digital Credential to be revoked can not be found by the Issuer."
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The error code",
                      "example": "internal_server_error"
                    },
                    "error_description": {
                      "type": "string",
                      "description": "Text in human-readable form providing further details to clarify the nature of the error encountered",
                      "example": "The Issuer encountered an internal problem."
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The error code",
                      "example": "service_unavaible"
                    },
                    "error_description": {
                      "type": "string",
                      "description": "Text in human-readable form providing further details to clarify the nature of the error encountered",
                      "example": "The Issuer is temporary unavailable."
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "get": {
        "tags": [
          "RP Wallet"
        ],
        "summary": "The RP Wallet endpoint for starting the authentication of the Wallet Instance end user",
        "operationId": "login_rp_wallet",
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "description": "It MUST be set to the same value of the 'state' parameter in the PAR Request.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "example": "fyZiOL9Lf2CeKuNT2JzxiLRDink0uPcd"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Found  <br> <br/> <b>No content</b> <br/><br/>=> EXAMPLE Location header: <br/><br/> https%3A%2F%2Fwallet-rp.ipzs.it%2Frequest_uri%2FGkurKxf5T0Y-mnPFCHqWOMiZi4VS138cQO_V7PZHAdM%3Fclient_id%3DAxjAnj0t5qpRVgR6apZ7gChaPb6y8gNm7CkPd58PD4c%26request_uri%3Dhttps%3A%2F%2Fwallet-rp.ipzs.it%2Frequest_uri%2FGkurKxf5T0Y-mnPFCHqWOMiZi4VS138cQO_V7PZHAdM%26client_id_scheme%3Dentity_id%26request_uri_method%3Dget",
            "headers": {
              "Location": {
                "description": "The Location response header indicates the URL of RP Wallet service to redirect the Wallet Instance to.<br/><br/>This URL present in query string: <ul><li>client_id</li><li>request_uri (It MUST be set to: <i>/request_uri/{random value}</i>)</li><li>client_id_scheme (It MUST be set to: <i>entity_id</i>)</li><li>request_uri_method (It MUST be set to: <i>get</i>)</li></ul>",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      }
    },
    "/request_uri/{random_value}": {
      "get": {
        "tags": [
          "RP Wallet"
        ],
        "summary": "The RP Wallet endpoint for downloading the Request Object produced for a login request previously received; this Request Object represents an RP authorization request for getting the WTE and the eID Verifiable Credential from the Wallet Instance to authenticate the end user",
        "operationId": "requestUri_rp_wallet",
        "parameters": [
          {
            "name": "random_value",
            "in": "path",
            "description": "A random value revealed from login service of RP",
            "required": true,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "example": "GkurKxf5T0Y-mnPFCHqWOMiZi4VS138cQO_V7PZHAdM"
          },
          {
            "name": "client_id",
            "in": "query",
            "description": "Unique identifier of the Relying Party (in URL-encoded format)",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "example": "https%3A%2F%2Fwallet-rp.ipzs.it"
          },
          {
            "name": "request_uri",
            "in": "query",
            "description": "The HTTPs URL where the Relying Party provides the signed Request Object to the Wallet Instance",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "example": "https%3A%2F%2Fwallet-rp.ipzs.it%2Frequest_uri%2FGkurKxf5T0Y-mnPFCHqWOMiZi4VS138cQO_V7PZHAdM"
          },
          {
            "name": "client_id_scheme",
            "in": "query",
            "description": "String identifying the scheme of the value in the client_id. It MUST be set to the value <i>entity_id</i>",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "example": "entity_id"
          },
          {
            "name": "request_uri_method",
            "in": "query",
            "description": "String identifying the HTTP method. The Wallet Instance should use this method to obtain the signed Request Object from the request_uri. It MUST be set to the value <i>entity_id</i>",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "example": "get"
          }
        ],
        "responses": {
          "200": {
            "description": "OK <br/><br/><a target=\"blank\" href=\"https://raw.githubusercontent.com/it-helpers/it-wallet-helpers/0.6.0/docs/schemes//jwt_request_uri_response_header.json\">JSON Header schema</a><br/><br/><a target=\"blank\" href=\"https://github.com/it-helpers/it-wallet-helpers/blob/0.6.0/docs/schemes/jwt_request_uri_response.json\">JSON Payload schema</a> <br /><br /><a target=\"blank\" href=\"https://jwt.io/#debugger-io?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiIsImtpZCI6ImVlYmUzY2Y3YmFlNDllZjJkNDlmYWZhY2Q0YjIxZjk0In0.eyJzY29wZSI6IlBlcnNvbklkZW50aWZpY2F0aW9uRGF0YSBXYWxsZXRBdHRlc3RhdGlvbiIsImNsaWVudF9pZF9zY2hlbWUiOiJlbnRpdHlfaWQiLCJjbGllbnRfaWQiOiJodHRwczovL3dhbGxldC1ycC5pcHpzLml0IiwicmVzcG9uc2VfbW9kZSI6ImRpcmVjdF9wb3N0Lmp3dCIsInJlc3BvbnNlX3R5cGUiOiJ2cF90b2tlbiIsInJlc3BvbnNlX3VyaSI6Imh0dHBzOi8vd2FsbGV0LXJwLmlwenMuaXQvcmVzcG9uc2VfdXJpIiwibm9uY2UiOiIyYzEyOGU0ZC1mYzkxLTRjZDMtODZiOC0xOGJkZWEwOTg4Y2IiLCJzdGF0ZSI6IjNiZTM5YjY5LTZhYzEtNDFhYS05MjFiLTNlNmMwN2RkY2IwMyIsImlzcyI6Imh0dHBzOi8vd2FsbGV0LXJwLmlwenMuaXQiLCJpYXQiOjE2NzI0MTg0NjUsImV4cCI6MTY3MjQyMjA2NSwicmVxdWVzdF91cmlfbWV0aG9kIjoicG9zdCJ9.E0_SS7WAznjIpsPVCj5_U0HeYOKTp3iglcE3gXO69yHmR26M89FrwqxzAWf_iQoN9_fusuclSBnRtH80dLX0Wg\">EXAMPLE ON JWT.IO</a>",
            "content": {
              "application/jws": {
                "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiIsImtpZCI6ImVlYmUzY2Y3YmFlNDllZjJkNDlmYWZhY2Q0YjIxZjk0In0.eyJzY29wZSI6IlBlcnNvbklkZW50aWZpY2F0aW9uRGF0YSBXYWxsZXRBdHRlc3RhdGlvbiIsImNsaWVudF9pZF9zY2hlbWUiOiJlbnRpdHlfaWQiLCJjbGllbnRfaWQiOiJodHRwczovL3dhbGxldC1ycC5pcHpzLml0IiwicmVzcG9uc2VfbW9kZSI6ImRpcmVjdF9wb3N0Lmp3dCIsInJlc3BvbnNlX3R5cGUiOiJ2cF90b2tlbiIsInJlc3BvbnNlX3VyaSI6Imh0dHBzOi8vd2FsbGV0LXJwLmlwenMuaXQvcmVzcG9uc2VfdXJpIiwibm9uY2UiOiIyYzEyOGU0ZC1mYzkxLTRjZDMtODZiOC0xOGJkZWEwOTg4Y2IiLCJzdGF0ZSI6IjNiZTM5YjY5LTZhYzEtNDFhYS05MjFiLTNlNmMwN2RkY2IwMyIsImlzcyI6Imh0dHBzOi8vd2FsbGV0LXJwLmlwenMuaXQiLCJpYXQiOjE2NzI0MTg0NjUsImV4cCI6MTY3MjQyMjA2NSwicmVxdWVzdF91cmlfbWV0aG9kIjoicG9zdCJ9.E0_SS7WAznjIpsPVCj5_U0HeYOKTp3iglcE3gXO69yHmR26M89FrwqxzAWf_iQoN9_fusuclSBnRtH80dLX0Wg"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The error code",
                      "example": "invalid_request"
                    },
                    "error_description": {
                      "type": "string",
                      "description": "Text in human-readable form providing further details to clarify the nature of the error encountered",
                      "example": "The request_uri is malformed or does not point to a valid Request Object."
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The error code",
                      "example": "internal_server_error"
                    },
                    "error_description": {
                      "type": "string",
                      "description": "Text in human-readable form providing further details to clarify the nature of the error encountered",
                      "example": "The request_uri cannot be retrieved due to an internal server error."
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/response_uri": {
      "post": {
        "tags": [
          "RP Wallet"
        ],
        "summary": "The RP Wallet endpoint for presenting the WTE and the eID Verifiable Credential requested by the RP Wallet with the Request Object to authenticate the Wallet Instance end user",
        "operationId": "response_uri_rp_wallet",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ResponseUriRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUriResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The error code",
                      "example": "invalid_request"
                    },
                    "error_description": {
                      "type": "string",
                      "description": "Text in human-readable form providing further details to clarify the nature of the error encountered",
                      "example": "The following Credentials/VP are malformed"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The error code",
                      "example": "invalid_request"
                    },
                    "error_description": {
                      "type": "string",
                      "description": "Text in human-readable form providing further details to clarify the nature of the error encountered",
                      "example": "Trust cannot be established with the issuer"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ParRequest": {
        "type": "object",
        "properties": {
          "response_type": {
            "type": "string",
            "description": "MUST be set to 'code'",
            "example": "code"
          },
          "client_id": {
            "type": "string",
            "description": "MUST be set to the base64url encoded SHA-256 thumbprint of the public key specified inside the claim 'cnf' of the Wallet Attestation JWT (in JWT format)",
            "example": "AxjAnj0t5qpRVgR6apZ7gChaPb6y8gNm7CkPd58PD4c"
          },
          "code_challenge": {
            "type": "string",
            "description": "A challenge derived from the code PKCE verifier that is sent in the authorization request",
            "example": "E9Melhoa2OwvFrEMTJguCHaoeK1t8URWbuGJSstw-cM"
          },
          "code_challenge_method": {
            "type": "string",
            "description": "A method that was used to calculate the PKCE code challenge. It MUST be set to 'S256'",
            "example": "S256"
          },
          "request": {
            "type": "string",
            "description": "A signed JWT contains PAR request params (the private key used to sign this JWT must match to the public one in the cnf parameter inside the Wallet Attestation).<br/><br/><a target=\"blank\" href=\"https://raw.githubusercontent.com/it-helpers/it-wallet-helpers/0.6.0/docs/schemes/jwt_request_object_header.json\">JSON Header schema</a><br/><br/><a target=\"blank\" href=\"https://raw.githubusercontent.com/it-helpers/it-wallet-helpers/0.6.0/docs/schemes/jwt_request_object.json\">JSON Payload schema</a> <br /><br /><a target=\"blank\" href=\"https://jwt.io/#debugger-io?token=eyJ0eXAiOiJqd3QiLCJhbGciOiJFUzI1NiIsImtpZCI6InZiZVhKa3NNNDV4cGh0QU5uQ2lHNm1DeXVVNGpmR056b3BHdUt2b2dnOWMifQ.eyJhdWQiOiJodHRwOi8vaXQtd2FsbGV0LWVhYS1wcm92aWRlci5leGFtcGxlLml0IiwiaXNzIjoiQXhqQW5qMHQ1cXBSVmdSNmFwWjdnQ2hhUGI2eThnTm03Q2tQZDU4UEQ0YyIsImV4cCI6IjE3MDE5NjA4NDQiLCJpYXQiOiIxNzEwMzQ2MzQzIiwicmVzcG9uc2VfdHlwZSI6IlBPU1QiLCJjbGllbnRfaWQiOiJBeGpBbmowdDVxcFJWZ1I2YXBaN2dDaGFQYjZ5OGdObTdDa1BkNThQRDRjIiwic3RhdGUiOiJmeVppT0w5TGYyQ2VLdU5UMkp6eGlMUkRpbmswdVBjZCIsImNvZGVfY2hhbGxlbmdlIjoiRTlNZWxob2EyT3d2RnJFTVRKZ3VDSGFvZUsxdDhVUldidUdKU3N0dy1jTSIsImNvZGVfY2hhbGxlbmdlX21ldGhvZCI6IlMyNTYiLCJhdXRob3JpemF0aW9uX2RldGFpbHMiOlt7InR5cGUiOiJvcGVuaWRfY3JlZGVudGlhbCJ9LHsiY3JlZGVudGlhbF9jb25maWd1cmF0aW9uX2lkIjoiUGVyc29uSWRlbnRpZmljYXRpb25EYXRhIn1dLCJyZWRpcmVjdF91cmkiOiJodHRwczovL3N0YXJ0LndhbGxldC5leGFtcGxlLm9yZyIsImNsaWVudF9hc3NlcnRpb25fdHlwZSI6InVybjppZXRmOnBhcmFtczpvYXV0aDpjbGllbnQtYXNzZXJ0aW9uLXR5cGU6and0LWNsaWVudC1hdHRlc3RhdGlvbiIsImNsaWVudF9hc3NlcnRpb24iOiJld29KSW1Gc1p5STZJQ0pGVXpJMU5pSXNDZ2tpZEhsd0lqb2dJbmRoYkd4bGRDMWhkSFJsYzNSaGRHbHZiaXRxZDNRaUxBb0pJbXRwWkNJNklDSTFkRFZaV1hCQ2FFNHRSV2RKUlVWSk5XbFZlbkkyY2pCTlVqQXlURzVXVVRCUGJXVnJiVTVMWTJwWklncDkuZXlKcGMzTWlPaUpvZEhSd2N6b3ZMM2RoYkd4bGRDMXdjbTkyYVdSbGNpNWxlR0Z0Y0d4bExtOXlaeUlzSW5OMVlpSTZJblppWlZoS2EzTk5ORFY0Y0doMFFVNXVRMmxITm0xRGVYVlZOR3BtUjA1NmIzQkhkVXQyYjJkbk9XTWlMQ0owZVhCbElqb2lWMkZzYkdWMFNXNXpkR0Z1WTJWQmRIUmxjM1JoZEdsdmJpSXNJbkJ2YkdsamVWOTFjbWtpT2lKb2RIUndjem92TDNkaGJHeGxkQzF3Y205MmFXUmxjaTVsZUdGdGNHeGxMbTl5Wnk5d2NtbDJZV041WDNCdmJHbGplU0lzSW5SdmMxOTFjbWtpT2lKb2RIUndjem92TDNkaGJHeGxkQzF3Y205MmFXUmxjaTVsZUdGdGNHeGxMbTl5Wnk5cGJtWnZYM0J2YkdsamVTSXNJbXh2WjI5ZmRYSnBJam9pYUhSMGNITTZMeTkzWVd4c1pYUXRjSEp2ZG1sa1pYSXVaWGhoYlhCc1pTNXZjbWN2Ykc5bmJ5NXpkbWNpTENKaGRIUmxjM1JsWkY5elpXTjFjbWwwZVY5amIyNTBaWGgwSWpvaWFIUjBjSE02THk5M1lXeHNaWFF0Y0hKdmRtbGtaWEl1WlhoaGJYQnNaUzV2Y21jdlRHOUJMMkpoYzJsaklpd2lZMjVtSWpwN0ltcDNheUk2ZXlKamNuWWlPaUpRTFRJMU5pSXNJbXQwZVNJNklrVkRJaXdpZUNJNklqUklUbkIwU1MxNGNqSndhbmxTU2t0SFRXNTZORmR0Wkc1UlJGOTFTbE54TkZJNU5VNXFPVGhpTkRRaUxDSjVJam9pVEVsYWJsTkNNemwyUmtwb1dXZFRNMnMzYWxoRk5ISXpMVU52UjBaUmQxcDBVRUpKVW5Gd1RteHlaeUlzSW10cFpDSTZJblppWlZoS2EzTk5ORFY0Y0doMFFVNXVRMmxITm0xRGVYVlZOR3BtUjA1NmIzQkhkVXQyYjJkbk9XTWlmWDBzSW1GMWRHaHZjbWw2WVhScGIyNWZaVzVrY0c5cGJuUWlPaUpsZFdScGR6b2lMQ0p5WlhOd2IyNXpaVjkwZVhCbGMxOXpkWEJ3YjNKMFpXUWlPbHNpZG5CZmRHOXJaVzRpWFN3aWRuQmZabTl5YldGMGMxOXpkWEJ3YjNKMFpXUWlPbnNpYW5kMFgzWndYMnB6YjI0aU9uc2lZV3huWDNaaGJIVmxjMTl6ZFhCd2IzSjBaV1FpT2xzaVJWTXlOVFlpWFgwc0ltcDNkRjkyWTE5cWMyOXVJanA3SW1Gc1oxOTJZV3gxWlhOZmMzVndjRzl5ZEdWa0lqcGJJa1ZUTWpVMklsMTlmU3dpY21WeGRXVnpkRjl2WW1wbFkzUmZjMmxuYm1sdVoxOWhiR2RmZG1Gc2RXVnpYM04xY0hCdmNuUmxaQ0k2V3lKRlV6STFOaUpkTENKd2NtVnpaVzUwWVhScGIyNWZaR1ZtYVc1cGRHbHZibDkxY21sZmMzVndjRzl5ZEdWa0lqcG1ZV3h6WlN3aWFXRjBJam94TmpnM01qZ3hNVGsxTENKbGVIQWlPakUyT0RjeU9EZ3pPVFY5LnROdkN5RlBDTDV0VWkyTmFrS3dkYUc5eGJydFdXbDRkalNSWVJmSHJGOE5kbWZmZFQwNDRVNTVwUm4zNUoyY2wwTFp4YmVzRURyZlNBejJwbGx3MlVnfmV5SjBlWEFpT2lKcWQzUXRZMnhwWlc1MExXRjBkR1Z6ZEdGMGFXOXVMWEJ2Y0NJc0ltRnNaeUk2SWtWVE1qVTJJaXdpYW5kcklqcDdJbU55ZGlJNklsQXRNalUySWl3aWEzUjVJam9pUlVNaUxDSjRJam9pTkVoT2NIUkpMWGh5TW5CcWVWSktTMGROYm5vMFYyMWtibEZFWDNWS1UzRTBVamsxVG1vNU9HSTBOQ0lzSW5raU9pSk1TVnB1VTBJek9YWkdTbWhaWjFNemF6ZHFXRVUwY2pNdFEyOUhSbEYzV25SUVFrbFNjWEJPYkhKbklpd2lhMmxrSWpvaWRtSmxXRXByYzAwME5YaHdhSFJCVG01RGFVYzJiVU41ZFZVMGFtWkhUbnB2Y0VkMVMzWnZaMmM1WXlKOWZRLmV5SnBjM01pT2lKb2RIUndjem92TDNkaGJHeGxkQzF3Y205MmFXUmxjaTVsZUdGdGNHeGxMbTl5WnlJc0ltRjFaQ0k2SW1oMGRIQnpPaTh2YVhRdGQyRnNiR1YwTFdWaFlTMXdjbTkyYVdSbGNpNWxlR0Z0Y0d4bExtbDBMMkZ6TDNCaGNpSXNJbXAwYVNJNkltWTROVFUxWTJWaUxXTTJOV010TkRBeU5TMDVNemM0TFdJMk5qY3lZall4TkRsaFppSXNJbVY0Y0NJNk1UY3dOVFUzTXpZMU5Td2lhV0YwSWpveE56QTFOVGN3TURVMWZRLjFBaUcySFhCS0QzcmNtQkZ1MVRRekF5MExKc1NOY0xSOFhPeUxTcS1rYVlOeUVFZjZQa0tlcEc4VkNONl83UXBtam1pdjhRRlE5V0dRaXBsRFRWdTBnIn0.ngihXDZg8_FXadtfY5e77cqy0BU9HmgoF8ws_cZc8HJCKKdOZBxH5wpRCdS2uV6KZHAzcsPCDMjICoijOeAAXg&publicKey=%7B%0A%20%20%22kty%22%3A%20%22EC%22%2C%0A%20%20%22x%22%3A%20%2235lvC8uz2QrWpQJ3TUH8t9o9DURMp7ydU518RKDl20k%22%2C%0A%20%20%22y%22%3A%20%22I8BuXB2bvxelzJAd7OKhd-ZwjCst05Fx47Mb_0ugros%22%2C%0A%20%20%22crv%22%3A%20%22P-256%22%0A%7D\">EXAMPLE ON JWT.IO</a>",
            "pattern": "^([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)$",
            "example": "eyJ0eXAiOiJqd3QiLCJhbGciOiJFUzI1NiIsImtpZCI6InZiZVhKa3NNNDV4cGh0QU5uQ2lHNm1DeXVVNGpmR056b3BHdUt2b2dnOWMifQ.eyJhdWQiOiJodHRwOi8vaXQtd2FsbGV0LWVhYS1wcm92aWRlci5leGFtcGxlLml0IiwiaXNzIjoiQXhqQW5qMHQ1cXBSVmdSNmFwWjdnQ2hhUGI2eThnTm03Q2tQZDU4UEQ0YyIsImV4cCI6IjE3MDE5NjA4NDQiLCJpYXQiOiIxNzEwMzQ2MzQzIiwicmVzcG9uc2VfdHlwZSI6IlBPU1QiLCJjbGllbnRfaWQiOiJBeGpBbmowdDVxcFJWZ1I2YXBaN2dDaGFQYjZ5OGdObTdDa1BkNThQRDRjIiwic3RhdGUiOiJmeVppT0w5TGYyQ2VLdU5UMkp6eGlMUkRpbmswdVBjZCIsImNvZGVfY2hhbGxlbmdlIjoiRTlNZWxob2EyT3d2RnJFTVRKZ3VDSGFvZUsxdDhVUldidUdKU3N0dy1jTSIsImNvZGVfY2hhbGxlbmdlX21ldGhvZCI6IlMyNTYiLCJhdXRob3JpemF0aW9uX2RldGFpbHMiOlt7InR5cGUiOiJvcGVuaWRfY3JlZGVudGlhbCJ9LHsiY3JlZGVudGlhbF9jb25maWd1cmF0aW9uX2lkIjoiUGVyc29uSWRlbnRpZmljYXRpb25EYXRhIn1dLCJyZWRpcmVjdF91cmkiOiJodHRwczovL3N0YXJ0LndhbGxldC5leGFtcGxlLm9yZyIsImNsaWVudF9hc3NlcnRpb25fdHlwZSI6InVybjppZXRmOnBhcmFtczpvYXV0aDpjbGllbnQtYXNzZXJ0aW9uLXR5cGU6and0LWNsaWVudC1hdHRlc3RhdGlvbiIsImNsaWVudF9hc3NlcnRpb24iOiJld29KSW1Gc1p5STZJQ0pGVXpJMU5pSXNDZ2tpZEhsd0lqb2dJbmRoYkd4bGRDMWhkSFJsYzNSaGRHbHZiaXRxZDNRaUxBb0pJbXRwWkNJNklDSTFkRFZaV1hCQ2FFNHRSV2RKUlVWSk5XbFZlbkkyY2pCTlVqQXlURzVXVVRCUGJXVnJiVTVMWTJwWklncDkuZXlKcGMzTWlPaUpvZEhSd2N6b3ZMM2RoYkd4bGRDMXdjbTkyYVdSbGNpNWxlR0Z0Y0d4bExtOXlaeUlzSW5OMVlpSTZJblppWlZoS2EzTk5ORFY0Y0doMFFVNXVRMmxITm0xRGVYVlZOR3BtUjA1NmIzQkhkVXQyYjJkbk9XTWlMQ0owZVhCbElqb2lWMkZzYkdWMFNXNXpkR0Z1WTJWQmRIUmxjM1JoZEdsdmJpSXNJbkJ2YkdsamVWOTFjbWtpT2lKb2RIUndjem92TDNkaGJHeGxkQzF3Y205MmFXUmxjaTVsZUdGdGNHeGxMbTl5Wnk5d2NtbDJZV041WDNCdmJHbGplU0lzSW5SdmMxOTFjbWtpT2lKb2RIUndjem92TDNkaGJHeGxkQzF3Y205MmFXUmxjaTVsZUdGdGNHeGxMbTl5Wnk5cGJtWnZYM0J2YkdsamVTSXNJbXh2WjI5ZmRYSnBJam9pYUhSMGNITTZMeTkzWVd4c1pYUXRjSEp2ZG1sa1pYSXVaWGhoYlhCc1pTNXZjbWN2Ykc5bmJ5NXpkbWNpTENKaGRIUmxjM1JsWkY5elpXTjFjbWwwZVY5amIyNTBaWGgwSWpvaWFIUjBjSE02THk5M1lXeHNaWFF0Y0hKdmRtbGtaWEl1WlhoaGJYQnNaUzV2Y21jdlRHOUJMMkpoYzJsaklpd2lZMjVtSWpwN0ltcDNheUk2ZXlKamNuWWlPaUpRTFRJMU5pSXNJbXQwZVNJNklrVkRJaXdpZUNJNklqUklUbkIwU1MxNGNqSndhbmxTU2t0SFRXNTZORmR0Wkc1UlJGOTFTbE54TkZJNU5VNXFPVGhpTkRRaUxDSjVJam9pVEVsYWJsTkNNemwyUmtwb1dXZFRNMnMzYWxoRk5ISXpMVU52UjBaUmQxcDBVRUpKVW5Gd1RteHlaeUlzSW10cFpDSTZJblppWlZoS2EzTk5ORFY0Y0doMFFVNXVRMmxITm0xRGVYVlZOR3BtUjA1NmIzQkhkVXQyYjJkbk9XTWlmWDBzSW1GMWRHaHZjbWw2WVhScGIyNWZaVzVrY0c5cGJuUWlPaUpsZFdScGR6b2lMQ0p5WlhOd2IyNXpaVjkwZVhCbGMxOXpkWEJ3YjNKMFpXUWlPbHNpZG5CZmRHOXJaVzRpWFN3aWRuQmZabTl5YldGMGMxOXpkWEJ3YjNKMFpXUWlPbnNpYW5kMFgzWndYMnB6YjI0aU9uc2lZV3huWDNaaGJIVmxjMTl6ZFhCd2IzSjBaV1FpT2xzaVJWTXlOVFlpWFgwc0ltcDNkRjkyWTE5cWMyOXVJanA3SW1Gc1oxOTJZV3gxWlhOZmMzVndjRzl5ZEdWa0lqcGJJa1ZUTWpVMklsMTlmU3dpY21WeGRXVnpkRjl2WW1wbFkzUmZjMmxuYm1sdVoxOWhiR2RmZG1Gc2RXVnpYM04xY0hCdmNuUmxaQ0k2V3lKRlV6STFOaUpkTENKd2NtVnpaVzUwWVhScGIyNWZaR1ZtYVc1cGRHbHZibDkxY21sZmMzVndjRzl5ZEdWa0lqcG1ZV3h6WlN3aWFXRjBJam94TmpnM01qZ3hNVGsxTENKbGVIQWlPakUyT0RjeU9EZ3pPVFY5LnROdkN5RlBDTDV0VWkyTmFrS3dkYUc5eGJydFdXbDRkalNSWVJmSHJGOE5kbWZmZFQwNDRVNTVwUm4zNUoyY2wwTFp4YmVzRURyZlNBejJwbGx3MlVnfmV5SjBlWEFpT2lKcWQzUXRZMnhwWlc1MExXRjBkR1Z6ZEdGMGFXOXVMWEJ2Y0NJc0ltRnNaeUk2SWtWVE1qVTJJaXdpYW5kcklqcDdJbU55ZGlJNklsQXRNalUySWl3aWEzUjVJam9pUlVNaUxDSjRJam9pTkVoT2NIUkpMWGh5TW5CcWVWSktTMGROYm5vMFYyMWtibEZFWDNWS1UzRTBVamsxVG1vNU9HSTBOQ0lzSW5raU9pSk1TVnB1VTBJek9YWkdTbWhaWjFNemF6ZHFXRVUwY2pNdFEyOUhSbEYzV25SUVFrbFNjWEJPYkhKbklpd2lhMmxrSWpvaWRtSmxXRXByYzAwME5YaHdhSFJCVG01RGFVYzJiVU41ZFZVMGFtWkhUbnB2Y0VkMVMzWnZaMmM1WXlKOWZRLmV5SnBjM01pT2lKb2RIUndjem92TDNkaGJHeGxkQzF3Y205MmFXUmxjaTVsZUdGdGNHeGxMbTl5WnlJc0ltRjFaQ0k2SW1oMGRIQnpPaTh2YVhRdGQyRnNiR1YwTFdWaFlTMXdjbTkyYVdSbGNpNWxlR0Z0Y0d4bExtbDBMMkZ6TDNCaGNpSXNJbXAwYVNJNkltWTROVFUxWTJWaUxXTTJOV010TkRBeU5TMDVNemM0TFdJMk5qY3lZall4TkRsaFppSXNJbVY0Y0NJNk1UY3dOVFUzTXpZMU5Td2lhV0YwSWpveE56QTFOVGN3TURVMWZRLjFBaUcySFhCS0QzcmNtQkZ1MVRRekF5MExKc1NOY0xSOFhPeUxTcS1rYVlOeUVFZjZQa0tlcEc4VkNONl83UXBtam1pdjhRRlE5V0dRaXBsRFRWdTBnIn0.ngihXDZg8_FXadtfY5e77cqy0BU9HmgoF8ws_cZc8HJCKKdOZBxH5wpRCdS2uV6KZHAzcsPCDMjICoijOeAAXg"
          },
          "client_assertion_type": {
            "type": "string",
            "description": "It MUST be set to 'urn:ietf:params:oauth:client-assertion-type:jwt-client-attestation'",
            "example": "urn:ietf:params:oauth:client-assertion-type:jwt-client-attestation"
          },
          "client_assertion": {
            "type": "string",
            "description": "It MUST be set to a value containing the Wallet Attestation (in signed JWT format) and the Proof of Possession of the Wallet Attestation (in signed JWT format) separated with the ~ character <br /><br /><a target=\"blank\" href=\"https://jwt.io/#debugger-io?token=ewoJImFsZyI6ICJFUzI1NiIsCgkidHlwIjogIndhbGxldC1hdHRlc3RhdGlvbitqd3QiLAoJImtpZCI6ICI1dDVZWXBCaE4tRWdJRUVJNWlVenI2cjBNUjAyTG5WUTBPbWVrbU5LY2pZIgp9.eyJpc3MiOiJodHRwczovL3dhbGxldC1wcm92aWRlci5leGFtcGxlLm9yZyIsInN1YiI6InZiZVhKa3NNNDV4cGh0QU5uQ2lHNm1DeXVVNGpmR056b3BHdUt2b2dnOWMiLCJ0eXBlIjoiV2FsbGV0SW5zdGFuY2VBdHRlc3RhdGlvbiIsInBvbGljeV91cmkiOiJodHRwczovL3dhbGxldC1wcm92aWRlci5leGFtcGxlLm9yZy9wcml2YWN5X3BvbGljeSIsInRvc191cmkiOiJodHRwczovL3dhbGxldC1wcm92aWRlci5leGFtcGxlLm9yZy9pbmZvX3BvbGljeSIsImxvZ29fdXJpIjoiaHR0cHM6Ly93YWxsZXQtcHJvdmlkZXIuZXhhbXBsZS5vcmcvbG9nby5zdmciLCJhdHRlc3RlZF9zZWN1cml0eV9jb250ZXh0IjoiaHR0cHM6Ly93YWxsZXQtcHJvdmlkZXIuZXhhbXBsZS5vcmcvTG9BL2Jhc2ljIiwiY25mIjp7Imp3ayI6eyJjcnYiOiJQLTI1NiIsImt0eSI6IkVDIiwieCI6IjRITnB0SS14cjJwanlSSktHTW56NFdtZG5RRF91SlNxNFI5NU5qOThiNDQiLCJ5IjoiTElablNCMzl2RkpoWWdTM2s3alhFNHIzLUNvR0ZRd1p0UEJJUnFwTmxyZyIsImtpZCI6InZiZVhKa3NNNDV4cGh0QU5uQ2lHNm1DeXVVNGpmR056b3BHdUt2b2dnOWMifX0sImF1dGhvcml6YXRpb25fZW5kcG9pbnQiOiJldWRpdzoiLCJyZXNwb25zZV90eXBlc19zdXBwb3J0ZWQiOlsidnBfdG9rZW4iXSwidnBfZm9ybWF0c19zdXBwb3J0ZWQiOnsiand0X3ZwX2pzb24iOnsiYWxnX3ZhbHVlc19zdXBwb3J0ZWQiOlsiRVMyNTYiXX0sImp3dF92Y19qc29uIjp7ImFsZ192YWx1ZXNfc3VwcG9ydGVkIjpbIkVTMjU2Il19fSwicmVxdWVzdF9vYmplY3Rfc2lnbmluZ19hbGdfdmFsdWVzX3N1cHBvcnRlZCI6WyJFUzI1NiJdLCJwcmVzZW50YXRpb25fZGVmaW5pdGlvbl91cmlfc3VwcG9ydGVkIjpmYWxzZSwiaWF0IjoxNjg3MjgxMTk1LCJleHAiOjE2ODcyODgzOTV9.tNvCyFPCL5tUi2NakKwdaG9xbrtWWl4djSRYRfHrF8NdmffdT044U55pRn35J2cl0LZxbesEDrfSAz2pllw2Ug\">Wallet Attestation EXAMPLE ON JWT.IO</a>  <br /><br /><a target=\"blank\" href=\"https://jwt.io/#debugger-io?token=eyJ0eXAiOiJqd3QtY2xpZW50LWF0dGVzdGF0aW9uLXBvcCIsImFsZyI6IkVTMjU2IiwiandrIjp7ImNydiI6IlAtMjU2Iiwia3R5IjoiRUMiLCJ4IjoiNEhOcHRJLXhyMnBqeVJKS0dNbno0V21kblFEX3VKU3E0Ujk1Tmo5OGI0NCIsInkiOiJMSVpuU0IzOXZGSmhZZ1MzazdqWEU0cjMtQ29HRlF3WnRQQklScXBObHJnIiwia2lkIjoidmJlWEprc000NXhwaHRBTm5DaUc2bUN5dVU0amZHTnpvcEd1S3ZvZ2c5YyJ9fQ.eyJpc3MiOiJodHRwczovL3dhbGxldC1wcm92aWRlci5leGFtcGxlLm9yZyIsImF1ZCI6Imh0dHBzOi8vaXQtd2FsbGV0LWVhYS1wcm92aWRlci5leGFtcGxlLml0L2FzL3BhciIsImp0aSI6ImY4NTU1Y2ViLWM2NWMtNDAyNS05Mzc4LWI2NjcyYjYxNDlhZiIsImV4cCI6MTcwNTU3MzY1NSwiaWF0IjoxNzA1NTcwMDU1fQ.1AiG2HXBKD3rcmBFu1TQzAy0LJsSNcLR8XOyLSq-kaYNyEEf6PkKepG8VCN6_7Qpmjmiv8QFQ9WGQiplDTVu0g\">WTE POP ON JWT.IO</a>",
            "example": "ewoJImFsZyI6ICJFUzI1NiIsCgkidHlwIjogIndhbGxldC1hdHRlc3RhdGlvbitqd3QiLAoJImtpZCI6ICI1dDVZWXBCaE4tRWdJRUVJNWlVenI2cjBNUjAyTG5WUTBPbWVrbU5LY2pZIgp9.eyJpc3MiOiJodHRwczovL3dhbGxldC1wcm92aWRlci5leGFtcGxlLm9yZyIsInN1YiI6InZiZVhKa3NNNDV4cGh0QU5uQ2lHNm1DeXVVNGpmR056b3BHdUt2b2dnOWMiLCJ0eXBlIjoiV2FsbGV0SW5zdGFuY2VBdHRlc3RhdGlvbiIsInBvbGljeV91cmkiOiJodHRwczovL3dhbGxldC1wcm92aWRlci5leGFtcGxlLm9yZy9wcml2YWN5X3BvbGljeSIsInRvc191cmkiOiJodHRwczovL3dhbGxldC1wcm92aWRlci5leGFtcGxlLm9yZy9pbmZvX3BvbGljeSIsImxvZ29fdXJpIjoiaHR0cHM6Ly93YWxsZXQtcHJvdmlkZXIuZXhhbXBsZS5vcmcvbG9nby5zdmciLCJhdHRlc3RlZF9zZWN1cml0eV9jb250ZXh0IjoiaHR0cHM6Ly93YWxsZXQtcHJvdmlkZXIuZXhhbXBsZS5vcmcvTG9BL2Jhc2ljIiwiY25mIjp7Imp3ayI6eyJjcnYiOiJQLTI1NiIsImt0eSI6IkVDIiwieCI6IjRITnB0SS14cjJwanlSSktHTW56NFdtZG5RRF91SlNxNFI5NU5qOThiNDQiLCJ5IjoiTElablNCMzl2RkpoWWdTM2s3alhFNHIzLUNvR0ZRd1p0UEJJUnFwTmxyZyIsImtpZCI6InZiZVhKa3NNNDV4cGh0QU5uQ2lHNm1DeXVVNGpmR056b3BHdUt2b2dnOWMifX0sImF1dGhvcml6YXRpb25fZW5kcG9pbnQiOiJldWRpdzoiLCJyZXNwb25zZV90eXBlc19zdXBwb3J0ZWQiOlsidnBfdG9rZW4iXSwidnBfZm9ybWF0c19zdXBwb3J0ZWQiOnsiand0X3ZwX2pzb24iOnsiYWxnX3ZhbHVlc19zdXBwb3J0ZWQiOlsiRVMyNTYiXX0sImp3dF92Y19qc29uIjp7ImFsZ192YWx1ZXNfc3VwcG9ydGVkIjpbIkVTMjU2Il19fSwicmVxdWVzdF9vYmplY3Rfc2lnbmluZ19hbGdfdmFsdWVzX3N1cHBvcnRlZCI6WyJFUzI1NiJdLCJwcmVzZW50YXRpb25fZGVmaW5pdGlvbl91cmlfc3VwcG9ydGVkIjpmYWxzZSwiaWF0IjoxNjg3MjgxMTk1LCJleHAiOjE2ODcyODgzOTV9.tNvCyFPCL5tUi2NakKwdaG9xbrtWWl4djSRYRfHrF8NdmffdT044U55pRn35J2cl0LZxbesEDrfSAz2pllw2Ug~eyJ0eXAiOiJqd3QtY2xpZW50LWF0dGVzdGF0aW9uLXBvcCIsImFsZyI6IkVTMjU2IiwiandrIjp7ImNydiI6IlAtMjU2Iiwia3R5IjoiRUMiLCJ4IjoiNEhOcHRJLXhyMnBqeVJKS0dNbno0V21kblFEX3VKU3E0Ujk1Tmo5OGI0NCIsInkiOiJMSVpuU0IzOXZGSmhZZ1MzazdqWEU0cjMtQ29HRlF3WnRQQklScXBObHJnIiwia2lkIjoidmJlWEprc000NXhwaHRBTm5DaUc2bUN5dVU0amZHTnpvcEd1S3ZvZ2c5YyJ9fQ.eyJpc3MiOiJodHRwczovL3dhbGxldC1wcm92aWRlci5leGFtcGxlLm9yZyIsImF1ZCI6Imh0dHBzOi8vaXQtd2FsbGV0LWVhYS1wcm92aWRlci5leGFtcGxlLml0L2FzL3BhciIsImp0aSI6ImY4NTU1Y2ViLWM2NWMtNDAyNS05Mzc4LWI2NjcyYjYxNDlhZiIsImV4cCI6MTcwNTU3MzY1NSwiaWF0IjoxNzA1NTcwMDU1fQ.1AiG2HXBKD3rcmBFu1TQzAy0LJsSNcLR8XOyLSq-kaYNyEEf6PkKepG8VCN6_7Qpmjmiv8QFQ9WGQiplDTVu0g"
          }
        },
        "required": [
          "response_type",
          "client_id",
          "code_challenge",
          "code_challenge_method",
          "request",
          "client_assertion_type",
          "client_assertion"
        ]
      },
      "ParResponse": {
        "type": "object",
        "properties": {
          "request_uri": {
            "type": "string",
            "description": "The request URI corresponding to the authorization request posted. This URI MUST be a single-use reference to the respective authorization request. It MUST contain some part generated using a cryptographically strong pseudorandom algorithm. The value format MUST be urn:ietf:params:oauth:request_uri:<reference-value> with <reference-value> as the random part of the URI that references the respective authorization request data",
            "example": "urn:ietf:params:oauth:request_uri:bwc4JK-ESC0w8acc191e-Y1LTC2"
          },
          "expires_in": {
            "type": "integer",
            "format": "int32",
            "description": "Integer, it represents the lifetime in seconds of the request URI",
            "example": 60
          }
        },
        "required": [
          "request_uri",
          "expires_in"
        ]
      },
      "AuthorizationIntResponse": {
        "type": "object",
        "properties": {
          "iss": {
            "type": "string",
            "description": "It MUST be set to the same value of the 'iss' parameter in the PAR Request, in URL-encoded format",
            "example": "AxjAnj0t5qpRVgR6apZ7gChaPb6y8gNm7CkPd58PD4c"
          },
          "state": {
            "type": "string",
            "description": "It MUST be set to the same value of the 'state' parameter in the PAR Request",
            "example": "fyZiOL9Lf2CeKuNT2JzxiLRDink0uPcd"
          },
          "code": {
            "type": "string",
            "description": "The authorization code generated by the authorization server",
            "example": "SplxlOBeZQQYbYS6WxSbIA"
          }
        }
      },
      "TokenRequest": {
        "type": "object",
        "properties": {
          "grant_type": {
            "type": "string",
            "description": "MUST be set to 'authorization_code'",
            "example": "authorization_code"
          },
          "code": {
            "type": "string",
            "description": "The authorization code returned in the Authorization Response",
            "example": "SplxlOBeZQQYbYS6WxSbIA"
          },
          "redirect_uri": {
            "type": "string",
            "description": "It MUST be set as the Request Objectredirect_uri claim of the PAR Request",
            "example": "https://start.wallet.example.org/cb"
          },
          "code_verifier": {
            "type": "string",
            "description": "Verification code of the code_challenge of the PAR Request",
            "example": "dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"
          },
          "client_assertion_type": {
            "type": "string",
            "description": "It MUST be set to 'urn:ietf:params:oauth:client-assertion-type:jwt-client-attestation'",
            "example": "urn:ietf:params:oauth:client-assertion-type:jwt-client-attestation"
          },
          "client_assertion": {
            "type": "string",
            "description": "It MUST be set to a value containing the Wallet Attestation JWT and the Proof of Possession, separated with the ~ character",
            "example": "$WIA~WIA-PoP"
          }
        },
        "required": [
          "grant_type",
          "code",
          "redirect_uri",
          "code_verifier",
          "c_nonce_expires_in",
          "client_assertion_type",
          "client_assertion"
        ]
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "The DPoP-bound Access Token, in signed JWT format, allows accessing the PID/(Q)EAA Credential Endpoint for obtaining Credentials specified in the PAR Request.  <br /><br /><a target=\"blank\" href=\"https://jwt.io/#debugger-io?token=eyJ0eXAiOiJhdCtqd3QiLCJhbGciOiJFUzI1NiIsImtpZCI6Ijc0MTE5OTU1OTVkYzczMTBkMzAxZjczN2QyNjQzZDhiIn0.eyJpc3MiOiJodHRwczovL2l0LXdhbGxldC1lYWEtcHJvdmlkZXIuZXhhbXBsZS5pdCIsInN1YiI6IjQ3YzA2NjE2YjNmOTk0ZmQ3YjcxYmY2MmY0ZWFjMzY2YjIwYWM3NWQiLCJhdWQiOiJodHRwczovL2l0LXdhbGxldC1lYWEtcHJvdmlkZXIuZXhhbXBsZS5pdC9jcmVkZW50aWFsIiwiamt0Ijoia1FNVTEzTnJ2aWMyRDlJR3AydC1QaExmaUhHRUZHNVJPRUlJZXl1ZTdOTSIsImV4cCI6MTcwNTU3MzY1NSwiaWF0IjoxNzA1NTcwMDU1LCJqdGkiOiJmODU1NWNlYi1jNjVjLTQwMjUtOTM3OC1iNjY3MmI2MTQ5YWYiLCJjbGllbnRfaWQiOiJBeGpBbmowdDVxcFJWZ1I2YXBaN2dDaGFQYjZ5OGdObTdDa1BkNThQRDRjIn0.u9cQG6F01APxQPFCQPOQt9Hhsb_mL8wHgHvT_FA5q78B-My5n8PKQoOJ4AUKK0PxC37rkwsj-AO4URYl7jgJDA\">EXAMPLE ON JWT.IO</a>",
            "pattern": "^([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)$",
            "example": "eyJ0eXAiOiJhdCtqd3QiLCJhbGciOiJFUzI1NiIsImtpZCI6Ijc0MTE5OTU1OTVkYzczMTBkMzAxZjczN2QyNjQzZDhiIn0.eyJpc3MiOiJodHRwczovL2l0LXdhbGxldC1lYWEtcHJvdmlkZXIuZXhhbXBsZS5pdCIsInN1YiI6IjQ3YzA2NjE2YjNmOTk0ZmQ3YjcxYmY2MmY0ZWFjMzY2YjIwYWM3NWQiLCJhdWQiOiJodHRwczovL2l0LXdhbGxldC1lYWEtcHJvdmlkZXIuZXhhbXBsZS5pdC9jcmVkZW50aWFsIiwiamt0Ijoia1FNVTEzTnJ2aWMyRDlJR3AydC1QaExmaUhHRUZHNVJPRUlJZXl1ZTdOTSIsImV4cCI6MTcwNTU3MzY1NSwiaWF0IjoxNzA1NTcwMDU1LCJqdGkiOiJmODU1NWNlYi1jNjVjLTQwMjUtOTM3OC1iNjY3MmI2MTQ5YWYiLCJjbGllbnRfaWQiOiJBeGpBbmowdDVxcFJWZ1I2YXBaN2dDaGFQYjZ5OGdObTdDa1BkNThQRDRjIn0.u9cQG6F01APxQPFCQPOQt9Hhsb_mL8wHgHvT_FA5q78B-My5n8PKQoOJ4AUKK0PxC37rkwsj-AO4URYl7jgJDA"
          },
          "token_type": {
            "type": "string",
            "description": "Type of Access Token returned. It MUST be equal to 'DPoP'",
            "example": "DPoP"
          },
          "expires_in": {
            "type": "integer",
            "format": "int32",
            "description": "Expiry time of the Access Token in seconds",
            "example": 3600
          },
          "c_nonce": {
            "type": "string",
            "description": "String containing a nonce value to be used to create a proof of possession of key material when requesting a Credential",
            "example": "ts_EtUQs0ieiIS1NYNBHEQSoy3ct4gpy-4FZKwHilkY"
          },
          "c_nonce_expires_in": {
            "type": "integer",
            "format": "int32",
            "description": "Integer, it represents the lifetime in seconds of the c_nonce",
            "example": 86400
          },
          "authorization_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthorizationDetails"
            },
            "description": "Array, used to identify authorizations grainted with the DPoP-bound Access Token"
          }
        },
        "required": [
          "access_token",
          "token_type",
          "expires_in",
          "c_nonce",
          "c_nonce_expires_in",
          "authorization_details"
        ]
      },
      "WellKnowResponse": {
        "type": "object",
        "properties": {
          "entity_configuration": {
            "type": "string",
            "description": "Metadata that an Entity publishes about itself, verifiable with a trusted third party (Superior Entity). It's called Entity Configuration. (<a target=\"blank\" href=\"https://raw.githubusercontent.com/it-helpers/it-wallet-helpers/0.6.0/docs/schemes/jwt_entity-configuration_eid_provider.json\">View the JSON schema</a>).",
            "pattern": "^([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)$",
            "example": "ewoKICAiYWxnIjogIkVTMjU2IiwKICAia2lkIjogIkZBTkZTM1luQzl0amlDYWl2aFdMVlVKM0F4d0dHel85OHVSRmFxTUVFcyIsCiAgInR5cCI6ICJlbnRpdHktc3RhdGVtZW50K2p3dCIKCn0..vnMKJBR2HB0CmWdrag6lt6aNRtN8BVvXiBoENFiqKlgXK7LFKz75WRza69Z9YhAd9yxAj2lKHlBGAulOG_IcMg"
          }
        },
        "required": [
          "response"
        ]
      },
      "AuthorizationDetails": {
        "type": "object",
        "description": "Object containing the detailed description of a specific autorization. Credential being described in the credential_configurations_supported map in the Credential Issuer Metadata",
        "properties": {
          "type": {
            "type": "string",
            "description": "The authorization details type. It MUST be set to 'openid_credential'",
            "example": "openid_credential"
          },
          "credential_configuration_id": {
            "type": "string",
            "description": "The unique identifier of the authorized Credential",
            "example": "PersonIdentificationData"
          }
        },
        "required": [
          "type",
          "credential_configuration_id"
        ]
      },
      "CredentialRequest": {
        "required": [
          "credential_definition",
          "format",
          "proof"
        ],
        "type": "object",
        "properties": {
          "credential_definition": {
            "$ref": "#/components/schemas/CredentialRequest_credential_definition"
          },
          "format": {
            "type": "string",
            "description": "Format of the verifiable credential type to be issued. This MUST be 'vc+sd-jwt' (selective disclosure JWT format)",
            "example": "vc+sd-jwt"
          },
          "proof": {
            "$ref": "#/components/schemas/CredentialRequest_proof"
          }
        },
        "description": "The credendential request"
      },
      "CredentialRequest_credential_definition": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "array",
            "description": "Array of one string, used to identify the verifiable credential type requested",
            "example": "[\"DisabilityCard\"]",
            "items": {
              "type": "string",
              "example": "DisabilityCard"
            }
          }
        },
        "description": "JSON object containing the verifiable credential type requested"
      },
      "CredentialRequest_proof": {
        "required": [
          "jwt",
          "proof_type"
        ],
        "type": "object",
        "properties": {
          "proof_type": {
            "type": "string",
            "description": "String denoting the proof type. It MUST be 'jwt'",
            "example": "jwt"
          },
          "jwt": {
            "type": "string",
            "description": "The JWT used as proof of possession <a target=\"blank\" href=\"https://jwt.io/#debugger-io?token=ewoJInR5cCI6ICJkcG9wK2p3dCIsCgkiYWxnIjogIkVTMjU2IiwKCSJqd2siOiB7CgkJImt0eSI6ICJFQyIsCgkJImNydiI6ICJQLTI1NiIsCgkJIngiOiAiVENBRVIxOVp2dTNPSEY0ajRXNHZmU1ZvSElQMUlMaWxEbHM3dkNlR2VtYyIsCgkJInkiOiAiWnhqaVdXYlpNUUdIVldLVlE0aGJTSWlyc1ZmdWVjQ0U2dDRqVDlGMkhaUSIKCX0KfQ.ewoJImlzcyI6ICJBeGpBbmowdDVxcFJWZ1I2YXBaN2dDaGFQYjZ5OGdObTdDa1BkNThQRDRjIiwKCSJhdWQiOiAiaHR0cHM6Ly9pdC13YWxsZXQtZWFhLXByb3ZpZGVyLmV4YW1wbGUuaXQvY3JlZGVudGlhbCIsCgkiaWF0IjogMTcwNTU3MDA1NSwKCSJub25jZSI6ICJ0c19FdFVRczBpZWlJUzFOWU5CSEVRU295M2N0NGdweS00RlpLd0hpbGtZIgp9.vnMKJBR2HB0CmWdrag6lt6aNRtN8BVvXiBoENFiqKlgXK7LFKz75WRza69Z9YhAd9yxAj2lKHlBGAulOG_IcMg&publicKey=%7B%0A%20%20%22kty%22%3A%20%22EC%22%2C%0A%20%20%22crv%22%3A%20%22P-256%22%2C%0A%20%20%22x%22%3A%20%22TCAER19Zvu3OHF4j4W4vfSVoHIP1ILilDls7vCeGemc%22%2C%0A%20%20%22y%22%3A%20%22ZxjiWWbZMQGHVWKVQ4hbSIirsVfuecCE6t4jT9F2HZQ%22%0A%7D\">EXAMPLE ON JWT.IO</a>",
            "example": "ewoJInR5cCI6ICJkcG9wK2p3dCIsCgkiYWxnIjogIkVTMjU2IiwKCSJqd2siOiB7CgkJImt0eSI6ICJFQyIsCgkJImNydiI6ICJQLTI1NiIsCgkJIngiOiAiVENBRVIxOVp2dTNPSEY0ajRXNHZmU1ZvSElQMUlMaWxEbHM3dkNlR2VtYyIsCgkJInkiOiAiWnhqaVdXYlpNUUdIVldLVlE0aGJTSWlyc1ZmdWVjQ0U2dDRqVDlGMkhaUSIKCX0KfQ.ewoJImlzcyI6ICJBeGpBbmowdDVxcFJWZ1I2YXBaN2dDaGFQYjZ5OGdObTdDa1BkNThQRDRjIiwKCSJhdWQiOiAiaHR0cHM6Ly9pdC13YWxsZXQtZWFhLXByb3ZpZGVyLmV4YW1wbGUuaXQvY3JlZGVudGlhbCIsCgkiaWF0IjogMTcwNTU3MDA1NSwKCSJub25jZSI6ICJ0c19FdFVRczBpZWlJUzFOWU5CSEVRU295M2N0NGdweS00RlpLd0hpbGtZIgp9.vnMKJBR2HB0CmWdrag6lt6aNRtN8BVvXiBoENFiqKlgXK7LFKz75WRza69Z9YhAd9yxAj2lKHlBGAulOG_IcMg"
          }
        },
        "description": "JSON object containing proof of possession of the key material the issued credential shall be bound to."
      },
      "CredentialResponse": {
        "required": [
          "c_nonce",
          "c_nonce_expires_in",
          "credential",
          "format"
        ],
        "type": "object",
        "properties": {
          "format": {
            "type": "string",
            "description": "Format of the verifiable credential issued. This MUST be 'vc+sd-jwt'",
            "example": "vc+sd-jwt"
          },
          "credential": {
            "pattern": "^[A-Za-z0-9_-]{2,}(?:\\.[A-Za-z0-9_-]{2,}){2}(?:\\~[A-Za-z0-9_-]{2,})+$",
            "type": "string",
            "description": "The verifiable credential (VC) is a digitally signed JWT carrying the information about a subject in clear text and containing digests/thumbprints over the selectively disclosable claims with the Disclosures outside the document, using the format defined in <a target=\"blank\" href=\"https://datatracker.ietf.org/doc/html/draft-ietf-oauth-selective-disclosure-jwt-07\">draft-ietf-oauth-selective-disclosure-jwt-07</a> and <a target=\"blank\" href=\"https://hub.ebsi.eu/vc-framework/did/selective-disclosure-sd-jwt\">draft-selective-disclosure-sd-jwt</a>. <br/>The SD-JWT and the Disclosures are issued as a single concatenated string, with the tilde ~ serving as a separator.<br/>The first block comprises the SD-JWT, while the remainder constitutes the Disclosures. <br/><SD-JWT>~<Disclosure 1>~<Disclosure 2>~...~<Disclosure N><br/><br/>SD-JWT=<base64-url-encoded(header)>.<base64-url-encoded(payload)>.<base64-url-encoded(signature)>",
            "format": "SD-JWT",
            "example": "ewogICAidHlwIjoidmMrc2Qtand0IiwKICAgImFsZyI6IkVTMjU2IiwKICAgImtpZCI6ImVOTi1nNWk2Q25MS2NsdFFCcDZhYmJpb0dNYnpNNm11VzN2dXh3NnVoODgiCn0.ewogICJfc2QiOiBbCiAgICAiei14NGJwTWF1b1FlSGVoUUNzWmRCUjhieGIzQkdyZ3R2WHp4X2o1ak00dyIsCiAgICAiSzRxRUhRemRGczVzNms1ZGo2Z0pZSWhCakFGdk5VY3NBZkZkcXJXSC1UcyIsCiAgICAieUIzN05nQ1JSaE5ET1lqZE9WdXF3V2hlZFZ3U2FwMjctTkkyS2VVU1VFZyIsCiAgICAiZXNIS0YwRTVXNW1ESVE1OFhRNFFQYTVvNDI1enJMR1E4czZybjQzcGVHNCIsCiAgICAieUhRbmN5SUdGNUwwV0xsUDVIa28wdFRZNlZNV1phT1BTSzFjRWQ1RGMyRSIsCgkia3JnZWZsZDhOb2o0a0xPZFZ4VjNJV0tUVEs5SXFlY2RTN3NyRUIzNXpPUSIsCgkic2QzY1gxNUlvM1dJRkZPWEJKRkE3Mzg4YjIyTVgyam9JN0k3UGlDZTIwIgogIF0sCiAgImV4cCI6IDE4ODMwMDAwMDAsCiAgImlzcyI6ICJodHRwczovL2VhYS1wcm92aWRlci5pcHpzLml0IiwKICAic3ViIjogIk56YkxzWGg4dURDY2Q3bm9XWEZaQWZIa3hac1JHQzlYcyIsCiAgInN0YXR1cyI6IHsKICAgICJzdGF0dXNfYXR0ZXN0YXRpb24iOiB7CiAgICAgICJjcmVkZW50aWFsX2hhc2hfYWxnIjogInNoYS0yNTYiCiAgICB9CiAgfSwKICAidmN0IjogIkRpc2FiaWxpdHlDYXJkIiwKICAiX3NkX2FsZyI6ICJzaGEtMjU2IiwKICAiY25mIjogewogICAgImp3ayI6IHsKICAgICAgImt0eSI6ICJFQyIsCiAgICAgICJjcnYiOiAiUC0yNTYiLAogICAgICAieCI6ICJUQ0FFUjE5WnZ1M09IRjRqNFc0dmZTVm9ISVAxSUxpbERsczd2Q2VHZW1jIiwKICAgICAgInkiOiAiWnhqaVdXYlpNUUdIVldLVlE0aGJTSWlyc1ZmdWVjQ0U2dDRqVDlGMkhaUSIKICAgIH0KICB9Cn0.MrbtZznuS3fnYugwMTFRi0AMTS5rKlLvqwbRRZWeqkA8EpSnEHtTUhA4bR-QF0sInThLeLFS5C4pVf414gy1UT-IS2vx0xksnXaUnMqIaPOF8ElRPTwUYI8tXeV8LM_wsmV61TtZadHOn6YHpju-jHEtMcD80ddwzJhSq4jig-lBVH_Ud-KWIKtN60SJ1uHxFar1Jdhoi6AlHI5u3nIzbmKG6a87qN00rqtcL2LE11IhDh3yg8XqbszqEaRftLtPl833_YD5t4tO0xiU25zq_TAWt5L_5ea7JjY6k-zzo-X2GEedRDRFSfmG6Nbk4ZvZ16ildG-pjiXLS6bpPQ1nvg~WyJSaHN5WVhKY0pkbUEyRVJOUUJNYlBRIiwic2VyaWFsZUNhcnRhIiwiMDAwMDAwMDIiXQ~WyJHdWg1Y19pVG5zVVdKSi1rWU9IenV3IiwiY29nbm9tZSIsIlJvc3NpIl0~WyJCcWlVR212MnJHaDV3QjJNTGFpakpBIiwibm9tZSIsIk1hcmlvIl0~WyJLNlY0WFUzZXo2Z0NUOG40NWhHT3J3IiwiZGF0YU5hc2NpdGEiLCIxOTgwLTAxLTEwIl0~WyJadWxDR3dEZHBZYXFsSW5hYVNrakJnIiwiZGF0YVNjYWRlbnphIiwiMjAzMC0wMS0xMCJd~"
          },
          "c_nonce": {
            "type": "string",
            "description": "String containing a nonce value to be used to create a proof of possession of key material when requesting a further Credential",
            "example": "ts_EtUQs0ieiIS1NYNBHEQSoy3ct4gpy-4FZKwHilkY"
          },
          "c_nonce_expires_in": {
            "type": "integer",
            "description": "Integer, it represents the lifetime in seconds of the c_nonce",
            "format": "int32",
            "example": 86400
          }
        },
        "description": "The credendential response"
      },
      "ErrorResponse": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "The error code",
            "example": "invalid_proof"
          },
          "error_description": {
            "type": "string",
            "description": "Text in human-readable form providing further details to clarify the nature of the error encountered",
            "example": "The proof field is not present or the provided key proof is invalid or not bound to a nonce provided by the Credential Issuer."
          }
        }
      },
      "StatusRequest": {
        "type": "object",
        "properties": {
          "credential_pop": {
            "type": "string",
            "description": "A signed JWT as a cryptographic proof of possesion of the <a target=\"blank\" href=\"https://italia.github.io/eudi-wallet-it-docs/v0.6.0/en/revocation-lists.html#sec-revocation-credential-pop\">Digital Credential</a> <br/><br/><a target=\"blank\" href=\"https://raw.githubusercontent.com/it-helpers/it-wallet-helpers/0.6.0/docs/schemes/jwt_credential_pop_header.json\">JSON Header schema</a><br/><br/><a target=\"blank\" href=\"https://raw.githubusercontent.com/it-helpers/it-wallet-helpers/0.6.0/docs/schemes/jwt_credential_pop.json\">JSON Payload schema</a><br/><br/><a target=\"blank\" href=\"https://jwt.io/#debugger-io?token=ewogICAgImFsZyI6ICJFUzI1NiIsCiAgICAidHlwIjogInN0YXR1cy1hdHRlc3RhdGlvbi1yZXF1ZXN0K2p3dCIsCiAgICAia2lkIjogImVOTi1nNWk2Q25MS2NsdFFCcDZhYmJpb0dNYnpNNm11VzN2dXh3NnVoODgiCn0.ewogICAgImlzcyI6ICJld29nSUNBZ0ltTnVaaUk2SUhzS0lDQWdJQ0FnSUNBaWFuZHJJam9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWlhM1I1SWpvZ0lrVkRJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0ltTnlkaUk2SUNKUUxUSTFOaUlzQ2lBZ0lDQWdJQ0FnSUNBZ0lDSjRJam9nSWxSRFFVVlNNVGxhZG5VelQwaEdOR28wVnpSMlpsTldiMGhKVURGSlRHbHNSR3h6TjNaRFpVZGxiV01pTEFvZ0lDQWdJQ0FnSUNBZ0lDQWllU0k2SUNKYWVHcHBWMWRpV2sxUlIwaFdWMHRXVVRSb1lsTkphWEp6Vm1aMVpXTkRSVFowTkdwVU9VWXlTRnBSSWdvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLZlEiLAogICAgImlhdCI6IDE1MDQ2OTkxMzYsCiAgICAiZXhwIjogMTUwNDcwMDEzNiwKICAgICJjcmVkZW50aWFsX2hhc2giOiAiMjExZjgwNDAwZWRlYWFmNjgzYmE2NTBlODJiOWFjZTI0NmQzNDM3Mjc4YjAxZTczYjc3OTM5YjFjYTZjYzgwZCIsCiAgICAiY3JlZGVudGlhbF9oYXNoX2FsZyI6ICJzaGEtMjU2IiwKICAgICJjbmYiOiB7CiAgICAgICAgImp3ayI6IHsKICAgICAgICAgICAgImt0eSI6ICJFQyIsCiAgICAgICAgICAgICJjcnYiOiAiUC0yNTYiLAogICAgICAgICAgICAieCI6ICJUQ0FFUjE5WnZ1M09IRjRqNFc0dmZTVm9ISVAxSUxpbERsczd2Q2VHZW1jIiwKICAgICAgICAgICAgInkiOiAiWnhqaVdXYlpNUUdIVldLVlE0aGJTSWlyc1ZmdWVjQ0U2dDRqVDlGMkhaUSIKICAgICAgICB9CiAgICB9Cn0.VyT25r23eO_ppWuw0ONV6GKjJFfvYtJKQSIngGwtyklmckhE3vg5U7Cws9V41GOU6F77MVifGfXf0l2HP3mW1Q&publicKey=%7B%0A%20%20%22kty%22%3A%20%22EC%22%2C%0A%20%20%22x%22%3A%20%2235lvC8uz2QrWpQJ3TUH8t9o9DURMp7ydU518RKDl20k%22%2C%0A%20%20%22y%22%3A%20%22I8BuXB2bvxelzJAd7OKhd-ZwjCst05Fx47Mb_0ugros%22%2C%0A%20%20%22crv%22%3A%20%22P-256%22%0A%7D\">EXAMPLE ON JWT.IO</a>",
            "pattern": "^([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)$",
            "example": "ewogICAgImFsZyI6ICJFUzI1NiIsCiAgICAidHlwIjogInN0YXR1cy1hdHRlc3RhdGlvbi1yZXF1ZXN0K2p3dCIsCiAgICAia2lkIjogImVOTi1nNWk2Q25MS2NsdFFCcDZhYmJpb0dNYnpNNm11VzN2dXh3NnVoODgiCn0.ewogICAgImlzcyI6ICJld29nSUNBZ0ltTnVaaUk2SUhzS0lDQWdJQ0FnSUNBaWFuZHJJam9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWlhM1I1SWpvZ0lrVkRJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0ltTnlkaUk2SUNKUUxUSTFOaUlzQ2lBZ0lDQWdJQ0FnSUNBZ0lDSjRJam9nSWxSRFFVVlNNVGxhZG5VelQwaEdOR28wVnpSMlpsTldiMGhKVURGSlRHbHNSR3h6TjNaRFpVZGxiV01pTEFvZ0lDQWdJQ0FnSUNBZ0lDQWllU0k2SUNKYWVHcHBWMWRpV2sxUlIwaFdWMHRXVVRSb1lsTkphWEp6Vm1aMVpXTkRSVFowTkdwVU9VWXlTRnBSSWdvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLZlEiLAogICAgImlhdCI6IDE1MDQ2OTkxMzYsCiAgICAiZXhwIjogMTUwNDcwMDEzNiwKICAgICJjcmVkZW50aWFsX2hhc2giOiAiMjExZjgwNDAwZWRlYWFmNjgzYmE2NTBlODJiOWFjZTI0NmQzNDM3Mjc4YjAxZTczYjc3OTM5YjFjYTZjYzgwZCIsCiAgICAiY3JlZGVudGlhbF9oYXNoX2FsZyI6ICJzaGEtMjU2IiwKICAgICJjbmYiOiB7CiAgICAgICAgImp3ayI6IHsKICAgICAgICAgICAgImt0eSI6ICJFQyIsCiAgICAgICAgICAgICJjcnYiOiAiUC0yNTYiLAogICAgICAgICAgICAieCI6ICJUQ0FFUjE5WnZ1M09IRjRqNFc0dmZTVm9ISVAxSUxpbERsczd2Q2VHZW1jIiwKICAgICAgICAgICAgInkiOiAiWnhqaVdXYlpNUUdIVldLVlE0aGJTSWlyc1ZmdWVjQ0U2dDRqVDlGMkhaUSIKICAgICAgICB9CiAgICB9Cn0.VyT25r23eO_ppWuw0ONV6GKjJFfvYtJKQSIngGwtyklmckhE3vg5U7Cws9V41GOU6F77MVifGfXf0l2HP3mW1Q"
          }
        },
        "required": [
          "credential_pop"
        ]
      },
      "RevocationRequest": {
        "type": "object",
        "properties": {
          "credential_pop": {
            "type": "string",
            "description": "A signed JWT as a cryptographic proof of possesion of the <a target=\"blank\" href=\"https://italia.github.io/eudi-wallet-it-docs/v0.6.0/en/revocation-lists.html#sec-revocation-credential-pop\">Digital Credential</a> <br/><br/><a target=\"blank\" href=\"https://raw.githubusercontent.com/it-helpers/it-wallet-helpers/0.6.0/docs/schemes/jwt_credential_pop_header.json\">JSON Header schema</a><br/><br/><a target=\"blank\" href=\"https://raw.githubusercontent.com/it-helpers/it-wallet-helpers/0.6.0/docs/schemes/jwt_credential_pop.json\">JSON Payload schema</a><br/><br/><a target=\"blank\" href=\"https://jwt.io/#debugger-io?token=ewogICAgImFsZyI6ICJFUzI1NiIsCiAgICAidHlwIjogInN0YXR1cy1hdHRlc3RhdGlvbi1yZXF1ZXN0K2p3dCIsCiAgICAia2lkIjogImVOTi1nNWk2Q25MS2NsdFFCcDZhYmJpb0dNYnpNNm11VzN2dXh3NnVoODgiCn0.ewogICAgImlzcyI6ICJld29nSUNBZ0ltTnVaaUk2SUhzS0lDQWdJQ0FnSUNBaWFuZHJJam9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWlhM1I1SWpvZ0lrVkRJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0ltTnlkaUk2SUNKUUxUSTFOaUlzQ2lBZ0lDQWdJQ0FnSUNBZ0lDSjRJam9nSWxSRFFVVlNNVGxhZG5VelQwaEdOR28wVnpSMlpsTldiMGhKVURGSlRHbHNSR3h6TjNaRFpVZGxiV01pTEFvZ0lDQWdJQ0FnSUNBZ0lDQWllU0k2SUNKYWVHcHBWMWRpV2sxUlIwaFdWMHRXVVRSb1lsTkphWEp6Vm1aMVpXTkRSVFowTkdwVU9VWXlTRnBSSWdvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLZlEiLAogICAgImlhdCI6IDE1MDQ2OTkxMzYsCiAgICAiZXhwIjogMTUwNDcwMDEzNiwKICAgICJjcmVkZW50aWFsX2hhc2giOiAiMjExZjgwNDAwZWRlYWFmNjgzYmE2NTBlODJiOWFjZTI0NmQzNDM3Mjc4YjAxZTczYjc3OTM5YjFjYTZjYzgwZCIsCiAgICAiY3JlZGVudGlhbF9oYXNoX2FsZyI6ICJzaGEtMjU2IiwKICAgICJjbmYiOiB7CiAgICAgICAgImp3ayI6IHsKICAgICAgICAgICAgImt0eSI6ICJFQyIsCiAgICAgICAgICAgICJjcnYiOiAiUC0yNTYiLAogICAgICAgICAgICAieCI6ICJUQ0FFUjE5WnZ1M09IRjRqNFc0dmZTVm9ISVAxSUxpbERsczd2Q2VHZW1jIiwKICAgICAgICAgICAgInkiOiAiWnhqaVdXYlpNUUdIVldLVlE0aGJTSWlyc1ZmdWVjQ0U2dDRqVDlGMkhaUSIKICAgICAgICB9CiAgICB9Cn0.VyT25r23eO_ppWuw0ONV6GKjJFfvYtJKQSIngGwtyklmckhE3vg5U7Cws9V41GOU6F77MVifGfXf0l2HP3mW1Q&publicKey=%7B%0A%20%20%22kty%22%3A%20%22EC%22%2C%0A%20%20%22x%22%3A%20%2235lvC8uz2QrWpQJ3TUH8t9o9DURMp7ydU518RKDl20k%22%2C%0A%20%20%22y%22%3A%20%22I8BuXB2bvxelzJAd7OKhd-ZwjCst05Fx47Mb_0ugros%22%2C%0A%20%20%22crv%22%3A%20%22P-256%22%0A%7D\">EXAMPLE ON JWT.IO</a>",
            "pattern": "^([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)$",
            "example": "ewogICAgImFsZyI6ICJFUzI1NiIsCiAgICAidHlwIjogInN0YXR1cy1hdHRlc3RhdGlvbi1yZXF1ZXN0K2p3dCIsCiAgICAia2lkIjogImVOTi1nNWk2Q25MS2NsdFFCcDZhYmJpb0dNYnpNNm11VzN2dXh3NnVoODgiCn0.ewogICAgImlzcyI6ICJld29nSUNBZ0ltTnVaaUk2SUhzS0lDQWdJQ0FnSUNBaWFuZHJJam9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWlhM1I1SWpvZ0lrVkRJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0ltTnlkaUk2SUNKUUxUSTFOaUlzQ2lBZ0lDQWdJQ0FnSUNBZ0lDSjRJam9nSWxSRFFVVlNNVGxhZG5VelQwaEdOR28wVnpSMlpsTldiMGhKVURGSlRHbHNSR3h6TjNaRFpVZGxiV01pTEFvZ0lDQWdJQ0FnSUNBZ0lDQWllU0k2SUNKYWVHcHBWMWRpV2sxUlIwaFdWMHRXVVRSb1lsTkphWEp6Vm1aMVpXTkRSVFowTkdwVU9VWXlTRnBSSWdvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLZlEiLAogICAgImlhdCI6IDE1MDQ2OTkxMzYsCiAgICAiZXhwIjogMTUwNDcwMDEzNiwKICAgICJjcmVkZW50aWFsX2hhc2giOiAiMjExZjgwNDAwZWRlYWFmNjgzYmE2NTBlODJiOWFjZTI0NmQzNDM3Mjc4YjAxZTczYjc3OTM5YjFjYTZjYzgwZCIsCiAgICAiY3JlZGVudGlhbF9oYXNoX2FsZyI6ICJzaGEtMjU2IiwKICAgICJjbmYiOiB7CiAgICAgICAgImp3ayI6IHsKICAgICAgICAgICAgImt0eSI6ICJFQyIsCiAgICAgICAgICAgICJjcnYiOiAiUC0yNTYiLAogICAgICAgICAgICAieCI6ICJUQ0FFUjE5WnZ1M09IRjRqNFc0dmZTVm9ISVAxSUxpbERsczd2Q2VHZW1jIiwKICAgICAgICAgICAgInkiOiAiWnhqaVdXYlpNUUdIVldLVlE0aGJTSWlyc1ZmdWVjQ0U2dDRqVDlGMkhaUSIKICAgICAgICB9CiAgICB9Cn0.VyT25r23eO_ppWuw0ONV6GKjJFfvYtJKQSIngGwtyklmckhE3vg5U7Cws9V41GOU6F77MVifGfXf0l2HP3mW1Q"
          }
        },
        "required": [
          "credential_pop"
        ]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "It MUST be set to the same value of the 'state' parameter in the PAR Request",
            "example": "fyZiOL9Lf2CeKuNT2JzxiLRDink0uPcd"
          }
        },
        "required": [
          "credential_pop"
        ]
      },
      "StatusResponse": {
        "type": "object",
        "properties": {
          "status_attestation": {
            "type": "string",
            "description": "The Issuer then returns the Status Attestation to the Wallet Instance as a signed JWT",
            "pattern": "^([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)$",
            "example": "ewogICAgImFsZyI6ICJFUzI1NiIsCiAgICAidHlwIjogInN0YXR1cy1hdHRlc3RhdGlvbitqd3QiLAogICAgImtpZCI6ICJlTk4tZzVpNkNuTEtjbHRRQnA2YWJiaW9HTWJ6TTZtdVczdnV4dzZ1aDg4Igp9.ewogICAgImlzcyI6ICJld29nSUNBZ0ltTnVaaUk2SUhzS0lDQWdJQ0FnSUNBaWFuZHJJam9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWlhM1I1SWpvZ0lrVkRJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0ltTnlkaUk2SUNKUUxUSTFOaUlzQ2lBZ0lDQWdJQ0FnSUNBZ0lDSjRJam9nSWxSRFFVVlNNVGxhZG5VelQwaEdOR28wVnpSMlpsTldiMGhKVURGSlRHbHNSR3h6TjNaRFpVZGxiV01pTEFvZ0lDQWdJQ0FnSUNBZ0lDQWllU0k2SUNKYWVHcHBWMWRpV2sxUlIwaFdWMHRXVVRSb1lsTkphWEp6Vm1aMVpXTkRSVFowTkdwVU9VWXlTRnBSSWdvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLZlEiLAogICAgImlhdCI6IDE1MDQ2OTkxMzYsCiAgICAiZXhwIjogMTUwNDcwMDEzNiwKICAgICJjcmVkZW50aWFsX2hhc2giOiAiMjExZjgwNDAwZWRlYWFmNjgzYmE2NTBlODJiOWFjZTI0NmQzNDM3Mjc4YjAxZTczYjc3OTM5YjFjYTZjYzgwZCIsCiAgICAiY3JlZGVudGlhbF9oYXNoX2FsZyI6ICJzaGEtMjU2IiwKICAgICJjbmYiOiB7CiAgICAgICAgImp3ayI6IHsKICAgICAgICAgICAgImt0eSI6ICJFQyIsCiAgICAgICAgICAgICJjcnYiOiAiUC0yNTYiLAogICAgICAgICAgICAieCI6ICJUQ0FFUjE5WnZ1M09IRjRqNFc0dmZTVm9ISVAxSUxpbERsczd2Q2VHZW1jIiwKICAgICAgICAgICAgInkiOiAiWnhqaVdXYlpNUUdIVldLVlE0aGJTSWlyc1ZmdWVjQ0U2dDRqVDlGMkhaUSIKICAgICAgICB9CiAgICB9Cn0.VyT25r23eO_ppWuw0ONV6GKjJFfvYtJKQSIngGwtyklmckhE3vg5U7Cws9V41GOU6F77MVifGfXf0l2HP3mW1Q"
          }
        },
        "required": [
          "status_attestation"
        ]
      },
      "ResponseUriRequest": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string",
            "description": "Response-URI Request in Base 64 url encoded format <br/><br/><a target=\"blank\" href=\"https://raw.githubusercontent.com/it-helpers/it-wallet-helpers/0.6.0/docs/schemes/json_response_uri_request.json\">Response-URI Request JSON Schema </a> <br /> <br /> <a target=\"blank\" href=\"https://jwt.io/#debugger-io?token=ewoJInN0YXRlIjogIjNiZTM5YjY5LTZhYzEtNDFhYS05MjFiLTNlNmMwN2RkY2IwMyIsCgkidnBfdG9rZW4iOiBbCgkJImV3b2dJQ0FpZEhsd0lqb2lkbU1yYzJRdGFuZDBJaXdLSUNBZ0ltRnNaeUk2SWtWVE1qVTJJaXdLSUNBZ0ltdHBaQ0k2SW1WT1RpMW5OV2syUTI1TVMyTnNkRkZDY0RaaFltSnBiMGROWW5wTk5tMTFWek4yZFhoM05uVm9PRGdpQ24wLmV3b2dJQ0pmYzJRaU9pQmJDaUFnSUNBaVRrOTRWbnBxVlVwbk5qWTNhVUprWlVSM2JYSTJkRm8wTmxndGFtTm9TM2RKVm5oTlFXWjJORE41WXlJc0NpQWdJQ0FpZDNsbWVGWnhjVGxDYjNOUVZEZDBUalJUU0U5Sk5FVTBPRkF4T1dGV1FURnJkRmMxV21Zd1JTMW1ZeUlzQ2lBZ0lDQWlWVWhEYUhCSGRFNUdNbUpxTVVaMlFXWkNZbmt4Y201bU4xZFlhM2hsYkVaS05XRTBkbE5xTWtaUE5DSXNDaUFnSUNBaVZFc3lVbWQxVUZsdldIcERlREIyZGpWb1lrNDVkVFZOTW0xSWJGZENkRFF4Y1VkWGJFeFlRMDUxT0NJc0NpQWdJQ0FpVjBscGJGUklaMWhyY25sMlR6UklaRXBCVkdSeGIxbExNMG80VjFOUlFVbDFha2Q0WlRGbVlqaGlSU0lLSUNCZExBb2dJQ0psZUhBaU9pQXhPRGd6TURBd01EQXdMQW9nSUNKcGMzTWlPaUFpYUhSMGNITTZMeTl3YVdSd2NtOTJhV1JsY2k1bGVHRnRjR3hsTG05eVp5SXNDaUFnSW5OMVlpSTZJQ0pPZW1KTWMxaG9PSFZFUTJOa04yNXZWMWhHV2tGbVNHdDRXbk5TUjBNNVdITWlMQW9nSUNKemRHRjBkWE1pT2lCN0NpQWdJQ0FpYzNSaGRIVnpYMkYwZEdWemRHRjBhVzl1SWpvZ2V3b2dJQ0FnSUNBaVkzSmxaR1Z1ZEdsaGJGOW9ZWE5vWDJGc1p5STZJQ0p6YUdFdE1qVTJJZ29nSUNBZ2ZRb2dJSDBzQ2lBZ0luWmpkQ0k2SUNKUVpYSnpiMjVKWkdWdWRHbG1hV05oZEdsdmJrUmhkR0VpTEFvZ0lDSmZjMlJmWVd4bklqb2dJbk5vWVMweU5UWWlMQW9nSUNKamJtWWlPaUI3Q2lBZ0lDQWlhbmRySWpvZ2V3b2dJQ0FnSUNBaWEzUjVJam9nSWtWRElpd0tJQ0FnSUNBZ0ltTnlkaUk2SUNKUUxUSTFOaUlzQ2lBZ0lDQWdJQ0o0SWpvZ0lsUkRRVVZTTVRsYWRuVXpUMGhHTkdvMFZ6UjJabE5XYjBoSlVERkpUR2xzUkd4ek4zWkRaVWRsYldNaUxBb2dJQ0FnSUNBaWVTSTZJQ0phZUdwcFYxZGlXazFSUjBoV1YwdFdVVFJvWWxOSmFYSnpWbVoxWldORFJUWjBOR3BVT1VZeVNGcFJJZ29nSUNBZ2ZRb2dJSDBLZlEuTXJidFp6bnVTM2ZuWXVnd01URlJpMEFNVFM1cktsTHZxd2JSUlpXZXFrQThFcFNuRUh0VFVoQTRiUi1RRjBzSW5UaExlTEZTNUM0cFZmNDE0Z3kxVVQtSVMydngweGtzblhhVW5NcUlhUE9GOEVsUlBUd1VZSTh0WGVWOExNX3dzbVY2MVR0WmFkSE9uNllIcGp1LWpIRXRNY0Q4MGRkd3pKaFNxNGppZy1sQlZIX1VkLUtXSUt0TjYwU0oxdUh4RmFyMUpkaG9pNkFsSEk1dTNuSXpibUtHNmE4N3FOMDBycXRjTDJMRTExSWhEaDN5ZzhYcWJzenFFYVJmdEx0UGw4MzNfWUQ1dDR0TzB4aVUyNXpxX1RBV3Q1TF81ZWE3SmpZNmstenpvLVgyR0VlZFJEUkZTZm1HNk5iazRadloxNmlsZEctcGppWExTNmJwUFExbnZnfld5SnJkV055UW0xc2IxOW9UV0ZKUmtZMU9EVlNlbUZSSWl3Z0luVnVhWEYxWlY5cFpDSXNJQ0o0ZUhoNGVIaDRlQzE0ZUhoNExYaDRlSGd0ZUhoNGVDMTRlSGg0ZUhoNGVIaDRlSGdpWFF-V3lKT1ZFNVNiMDlwZFZaV1VuUkdOa05GZW5Sa09WcDNJaXdnSW1kcGRtVnVYMjVoYldVaUxDQWlUV0Z5YVc4aVhRfld5SkdSRk5UVUdkbmVrZENWWGRSVEVoRVUwVTJkMUZSSWl3Z0ltWmhiV2xzZVY5dVlXMWxJaXdnSWxKdmMzTnBJbDB-V3lKTFdqaGxOWGRXUlhSRWRtSXhlbWxUVUVFMFJIcEJJaXdnSW1KcGNuUm9YMlJoZEdVaUxDQWlNVGs0TUMwd01TMHhNQ0pkfld5SndXalZOVW5sUGVIQldWMXAxU0V4dlNpMTVhbEpuSWl3aWRHRjRYMmxrWDJOdlpHVWlMQ0pTVTFOTlVrRTRNRkl3TVVnMU1ERkNJbDAiLAoJCSJld29KSW1Gc1p5STZJQ0pGVXpJMU5pSXNDZ2tpZEhsd0lqb2dJbmRoYkd4bGRDMWhkSFJsYzNSaGRHbHZiaXRxZDNRaUxBb0pJbXRwWkNJNklDSTFkRFZaV1hCQ2FFNHRSV2RKUlVWSk5XbFZlbkkyY2pCTlVqQXlURzVXVVRCUGJXVnJiVTVMWTJwWklncDkuZXlKcGMzTWlPaUpvZEhSd2N6b3ZMM2RoYkd4bGRDMXdjbTkyYVdSbGNpNWxlR0Z0Y0d4bExtOXlaeUlzSW5OMVlpSTZJblppWlZoS2EzTk5ORFY0Y0doMFFVNXVRMmxITm0xRGVYVlZOR3BtUjA1NmIzQkhkVXQyYjJkbk9XTWlMQ0owZVhCbElqb2lWMkZzYkdWMFNXNXpkR0Z1WTJWQmRIUmxjM1JoZEdsdmJpSXNJbkJ2YkdsamVWOTFjbWtpT2lKb2RIUndjem92TDNkaGJHeGxkQzF3Y205MmFXUmxjaTVsZUdGdGNHeGxMbTl5Wnk5d2NtbDJZV041WDNCdmJHbGplU0lzSW5SdmMxOTFjbWtpT2lKb2RIUndjem92TDNkaGJHeGxkQzF3Y205MmFXUmxjaTVsZUdGdGNHeGxMbTl5Wnk5cGJtWnZYM0J2YkdsamVTSXNJbXh2WjI5ZmRYSnBJam9pYUhSMGNITTZMeTkzWVd4c1pYUXRjSEp2ZG1sa1pYSXVaWGhoYlhCc1pTNXZjbWN2Ykc5bmJ5NXpkbWNpTENKaGRIUmxjM1JsWkY5elpXTjFjbWwwZVY5amIyNTBaWGgwSWpvaWFIUjBjSE02THk5M1lXeHNaWFF0Y0hKdmRtbGtaWEl1WlhoaGJYQnNaUzV2Y21jdlRHOUJMMkpoYzJsaklpd2lZMjVtSWpwN0ltcDNheUk2ZXlKamNuWWlPaUpRTFRJMU5pSXNJbXQwZVNJNklrVkRJaXdpZUNJNklqUklUbkIwU1MxNGNqSndhbmxTU2t0SFRXNTZORmR0Wkc1UlJGOTFTbE54TkZJNU5VNXFPVGhpTkRRaUxDSjVJam9pVEVsYWJsTkNNemwyUmtwb1dXZFRNMnMzYWxoRk5ISXpMVU52UjBaUmQxcDBVRUpKVW5Gd1RteHlaeUlzSW10cFpDSTZJblppWlZoS2EzTk5ORFY0Y0doMFFVNXVRMmxITm0xRGVYVlZOR3BtUjA1NmIzQkhkVXQyYjJkbk9XTWlmWDBzSW1GMWRHaHZjbWw2WVhScGIyNWZaVzVrY0c5cGJuUWlPaUpsZFdScGR6b2lMQ0p5WlhOd2IyNXpaVjkwZVhCbGMxOXpkWEJ3YjNKMFpXUWlPbHNpZG5CZmRHOXJaVzRpWFN3aWRuQmZabTl5YldGMGMxOXpkWEJ3YjNKMFpXUWlPbnNpYW5kMFgzWndYMnB6YjI0aU9uc2lZV3huWDNaaGJIVmxjMTl6ZFhCd2IzSjBaV1FpT2xzaVJWTXlOVFlpWFgwc0ltcDNkRjkyWTE5cWMyOXVJanA3SW1Gc1oxOTJZV3gxWlhOZmMzVndjRzl5ZEdWa0lqcGJJa1ZUTWpVMklsMTlmU3dpY21WeGRXVnpkRjl2WW1wbFkzUmZjMmxuYm1sdVoxOWhiR2RmZG1Gc2RXVnpYM04xY0hCdmNuUmxaQ0k2V3lKRlV6STFOaUpkTENKd2NtVnpaVzUwWVhScGIyNWZaR1ZtYVc1cGRHbHZibDkxY21sZmMzVndjRzl5ZEdWa0lqcG1ZV3h6WlN3aWFXRjBJam94TmpnM01qZ3hNVGsxTENKbGVIQWlPakUyT0RjeU9EZ3pPVFY5LnROdkN5RlBDTDV0VWkyTmFrS3dkYUc5eGJydFdXbDRkalNSWVJmSHJGOE5kbWZmZFQwNDRVNTVwUm4zNUoyY2wwTFp4YmVzRURyZlNBejJwbGx3MlVnIgoJXSwKCSJwcmVzZW50YXRpb25fc3VibWlzc2lvbiI6IHsKCQkiZGVmaW5pdGlvbl9pZCI6ICIzMmY1NDE2My03MTY2LTQ4ZjEtOTNkOC1mZjIxN2JkYjA2NTMiLAoJCSJpZCI6ICIwNGE5OGJlMy03ZmIwLTRjZjUtYWY5YS0zMTU3OWM4YjBlN2QiLAoJCSJkZXNjcmlwdG9yX21hcCI6IFsKCQkJewoJCQkJImlkIjogIlBlcnNvbklkZW50aWZpY2F0aW9uRGF0YSIsCgkJCQkicGF0aCI6ICIkLnZwX3Rva2VuLnZlcmlmaWVkX2NsYWltcy5jbGFpbXMuX3NkWzBdIiwKCQkJCSJmb3JtYXQiOiAidmMrc2Qtand0IgoJCQl9LAoJCQl7CgkJCQkiaWQiOiAiV2FsbGV0QXR0ZXN0YXRpb24iLAoJCQkJInBhdGgiOiAiJC52cF90b2tlbi52ZXJpZmllZF9jbGFpbXMuY2xhaW1zLl9zZFsxXSIsCgkJCQkiZm9ybWF0IjogImp3dCIKCQkJfQoJCV0KCX0KfQ\">EXAMPLE ON JWT.IO </a>",
            "example": "ewoJInN0YXRlIjogIjNiZTM5YjY5LTZhYzEtNDFhYS05MjFiLTNlNmMwN2RkY2IwMyIsCgkidnBfdG9rZW4iOiBbCgkJImV3b2dJQ0FpZEhsd0lqb2lkbU1yYzJRdGFuZDBJaXdLSUNBZ0ltRnNaeUk2SWtWVE1qVTJJaXdLSUNBZ0ltdHBaQ0k2SW1WT1RpMW5OV2syUTI1TVMyTnNkRkZDY0RaaFltSnBiMGROWW5wTk5tMTFWek4yZFhoM05uVm9PRGdpQ24wLmV3b2dJQ0pmYzJRaU9pQmJDaUFnSUNBaVRrOTRWbnBxVlVwbk5qWTNhVUprWlVSM2JYSTJkRm8wTmxndGFtTm9TM2RKVm5oTlFXWjJORE41WXlJc0NpQWdJQ0FpZDNsbWVGWnhjVGxDYjNOUVZEZDBUalJUU0U5Sk5FVTBPRkF4T1dGV1FURnJkRmMxV21Zd1JTMW1ZeUlzQ2lBZ0lDQWlWVWhEYUhCSGRFNUdNbUpxTVVaMlFXWkNZbmt4Y201bU4xZFlhM2hsYkVaS05XRTBkbE5xTWtaUE5DSXNDaUFnSUNBaVZFc3lVbWQxVUZsdldIcERlREIyZGpWb1lrNDVkVFZOTW0xSWJGZENkRFF4Y1VkWGJFeFlRMDUxT0NJc0NpQWdJQ0FpVjBscGJGUklaMWhyY25sMlR6UklaRXBCVkdSeGIxbExNMG80VjFOUlFVbDFha2Q0WlRGbVlqaGlSU0lLSUNCZExBb2dJQ0psZUhBaU9pQXhPRGd6TURBd01EQXdMQW9nSUNKcGMzTWlPaUFpYUhSMGNITTZMeTl3YVdSd2NtOTJhV1JsY2k1bGVHRnRjR3hsTG05eVp5SXNDaUFnSW5OMVlpSTZJQ0pPZW1KTWMxaG9PSFZFUTJOa04yNXZWMWhHV2tGbVNHdDRXbk5TUjBNNVdITWlMQW9nSUNKemRHRjBkWE1pT2lCN0NpQWdJQ0FpYzNSaGRIVnpYMkYwZEdWemRHRjBhVzl1SWpvZ2V3b2dJQ0FnSUNBaVkzSmxaR1Z1ZEdsaGJGOW9ZWE5vWDJGc1p5STZJQ0p6YUdFdE1qVTJJZ29nSUNBZ2ZRb2dJSDBzQ2lBZ0luWmpkQ0k2SUNKUVpYSnpiMjVKWkdWdWRHbG1hV05oZEdsdmJrUmhkR0VpTEFvZ0lDSmZjMlJmWVd4bklqb2dJbk5vWVMweU5UWWlMQW9nSUNKamJtWWlPaUI3Q2lBZ0lDQWlhbmRySWpvZ2V3b2dJQ0FnSUNBaWEzUjVJam9nSWtWRElpd0tJQ0FnSUNBZ0ltTnlkaUk2SUNKUUxUSTFOaUlzQ2lBZ0lDQWdJQ0o0SWpvZ0lsUkRRVVZTTVRsYWRuVXpUMGhHTkdvMFZ6UjJabE5XYjBoSlVERkpUR2xzUkd4ek4zWkRaVWRsYldNaUxBb2dJQ0FnSUNBaWVTSTZJQ0phZUdwcFYxZGlXazFSUjBoV1YwdFdVVFJvWWxOSmFYSnpWbVoxWldORFJUWjBOR3BVT1VZeVNGcFJJZ29nSUNBZ2ZRb2dJSDBLZlEuTXJidFp6bnVTM2ZuWXVnd01URlJpMEFNVFM1cktsTHZxd2JSUlpXZXFrQThFcFNuRUh0VFVoQTRiUi1RRjBzSW5UaExlTEZTNUM0cFZmNDE0Z3kxVVQtSVMydngweGtzblhhVW5NcUlhUE9GOEVsUlBUd1VZSTh0WGVWOExNX3dzbVY2MVR0WmFkSE9uNllIcGp1LWpIRXRNY0Q4MGRkd3pKaFNxNGppZy1sQlZIX1VkLUtXSUt0TjYwU0oxdUh4RmFyMUpkaG9pNkFsSEk1dTNuSXpibUtHNmE4N3FOMDBycXRjTDJMRTExSWhEaDN5ZzhYcWJzenFFYVJmdEx0UGw4MzNfWUQ1dDR0TzB4aVUyNXpxX1RBV3Q1TF81ZWE3SmpZNmstenpvLVgyR0VlZFJEUkZTZm1HNk5iazRadloxNmlsZEctcGppWExTNmJwUFExbnZnfld5SnJkV055UW0xc2IxOW9UV0ZKUmtZMU9EVlNlbUZSSWl3Z0luVnVhWEYxWlY5cFpDSXNJQ0o0ZUhoNGVIaDRlQzE0ZUhoNExYaDRlSGd0ZUhoNGVDMTRlSGg0ZUhoNGVIaDRlSGdpWFF-V3lKT1ZFNVNiMDlwZFZaV1VuUkdOa05GZW5Sa09WcDNJaXdnSW1kcGRtVnVYMjVoYldVaUxDQWlUV0Z5YVc4aVhRfld5SkdSRk5UVUdkbmVrZENWWGRSVEVoRVUwVTJkMUZSSWl3Z0ltWmhiV2xzZVY5dVlXMWxJaXdnSWxKdmMzTnBJbDB-V3lKTFdqaGxOWGRXUlhSRWRtSXhlbWxUVUVFMFJIcEJJaXdnSW1KcGNuUm9YMlJoZEdVaUxDQWlNVGs0TUMwd01TMHhNQ0pkfld5SndXalZOVW5sUGVIQldWMXAxU0V4dlNpMTVhbEpuSWl3aWRHRjRYMmxrWDJOdlpHVWlMQ0pTVTFOTlVrRTRNRkl3TVVnMU1ERkNJbDAiLAoJCSJld29KSW1Gc1p5STZJQ0pGVXpJMU5pSXNDZ2tpZEhsd0lqb2dJbmRoYkd4bGRDMWhkSFJsYzNSaGRHbHZiaXRxZDNRaUxBb0pJbXRwWkNJNklDSTFkRFZaV1hCQ2FFNHRSV2RKUlVWSk5XbFZlbkkyY2pCTlVqQXlURzVXVVRCUGJXVnJiVTVMWTJwWklncDkuZXlKcGMzTWlPaUpvZEhSd2N6b3ZMM2RoYkd4bGRDMXdjbTkyYVdSbGNpNWxlR0Z0Y0d4bExtOXlaeUlzSW5OMVlpSTZJblppWlZoS2EzTk5ORFY0Y0doMFFVNXVRMmxITm0xRGVYVlZOR3BtUjA1NmIzQkhkVXQyYjJkbk9XTWlMQ0owZVhCbElqb2lWMkZzYkdWMFNXNXpkR0Z1WTJWQmRIUmxjM1JoZEdsdmJpSXNJbkJ2YkdsamVWOTFjbWtpT2lKb2RIUndjem92TDNkaGJHeGxkQzF3Y205MmFXUmxjaTVsZUdGdGNHeGxMbTl5Wnk5d2NtbDJZV041WDNCdmJHbGplU0lzSW5SdmMxOTFjbWtpT2lKb2RIUndjem92TDNkaGJHeGxkQzF3Y205MmFXUmxjaTVsZUdGdGNHeGxMbTl5Wnk5cGJtWnZYM0J2YkdsamVTSXNJbXh2WjI5ZmRYSnBJam9pYUhSMGNITTZMeTkzWVd4c1pYUXRjSEp2ZG1sa1pYSXVaWGhoYlhCc1pTNXZjbWN2Ykc5bmJ5NXpkbWNpTENKaGRIUmxjM1JsWkY5elpXTjFjbWwwZVY5amIyNTBaWGgwSWpvaWFIUjBjSE02THk5M1lXeHNaWFF0Y0hKdmRtbGtaWEl1WlhoaGJYQnNaUzV2Y21jdlRHOUJMMkpoYzJsaklpd2lZMjVtSWpwN0ltcDNheUk2ZXlKamNuWWlPaUpRTFRJMU5pSXNJbXQwZVNJNklrVkRJaXdpZUNJNklqUklUbkIwU1MxNGNqSndhbmxTU2t0SFRXNTZORmR0Wkc1UlJGOTFTbE54TkZJNU5VNXFPVGhpTkRRaUxDSjVJam9pVEVsYWJsTkNNemwyUmtwb1dXZFRNMnMzYWxoRk5ISXpMVU52UjBaUmQxcDBVRUpKVW5Gd1RteHlaeUlzSW10cFpDSTZJblppWlZoS2EzTk5ORFY0Y0doMFFVNXVRMmxITm0xRGVYVlZOR3BtUjA1NmIzQkhkVXQyYjJkbk9XTWlmWDBzSW1GMWRHaHZjbWw2WVhScGIyNWZaVzVrY0c5cGJuUWlPaUpsZFdScGR6b2lMQ0p5WlhOd2IyNXpaVjkwZVhCbGMxOXpkWEJ3YjNKMFpXUWlPbHNpZG5CZmRHOXJaVzRpWFN3aWRuQmZabTl5YldGMGMxOXpkWEJ3YjNKMFpXUWlPbnNpYW5kMFgzWndYMnB6YjI0aU9uc2lZV3huWDNaaGJIVmxjMTl6ZFhCd2IzSjBaV1FpT2xzaVJWTXlOVFlpWFgwc0ltcDNkRjkyWTE5cWMyOXVJanA3SW1Gc1oxOTJZV3gxWlhOZmMzVndjRzl5ZEdWa0lqcGJJa1ZUTWpVMklsMTlmU3dpY21WeGRXVnpkRjl2WW1wbFkzUmZjMmxuYm1sdVoxOWhiR2RmZG1Gc2RXVnpYM04xY0hCdmNuUmxaQ0k2V3lKRlV6STFOaUpkTENKd2NtVnpaVzUwWVhScGIyNWZaR1ZtYVc1cGRHbHZibDkxY21sZmMzVndjRzl5ZEdWa0lqcG1ZV3h6WlN3aWFXRjBJam94TmpnM01qZ3hNVGsxTENKbGVIQWlPakUyT0RjeU9EZ3pPVFY5LnROdkN5RlBDTDV0VWkyTmFrS3dkYUc5eGJydFdXbDRkalNSWVJmSHJGOE5kbWZmZFQwNDRVNTVwUm4zNUoyY2wwTFp4YmVzRURyZlNBejJwbGx3MlVnIgoJXSwKCSJwcmVzZW50YXRpb25fc3VibWlzc2lvbiI6IHsKCQkiZGVmaW5pdGlvbl9pZCI6ICIzMmY1NDE2My03MTY2LTQ4ZjEtOTNkOC1mZjIxN2JkYjA2NTMiLAoJCSJpZCI6ICIwNGE5OGJlMy03ZmIwLTRjZjUtYWY5YS0zMTU3OWM4YjBlN2QiLAoJCSJkZXNjcmlwdG9yX21hcCI6IFsKCQkJewoJCQkJImlkIjogIlBlcnNvbklkZW50aWZpY2F0aW9uRGF0YSIsCgkJCQkicGF0aCI6ICIkLnZwX3Rva2VuLnZlcmlmaWVkX2NsYWltcy5jbGFpbXMuX3NkWzBdIiwKCQkJCSJmb3JtYXQiOiAidmMrc2Qtand0IgoJCQl9LAoJCQl7CgkJCQkiaWQiOiAiV2FsbGV0QXR0ZXN0YXRpb24iLAoJCQkJInBhdGgiOiAiJC52cF90b2tlbi52ZXJpZmllZF9jbGFpbXMuY2xhaW1zLl9zZFsxXSIsCgkJCQkiZm9ybWF0IjogImp3dCIKCQkJfQoJCV0KCX0KfQ"
          }
        }
      },
      "ResponseUriResponse": {
        "type": "object",
        "properties": {
          "redirect_uri": {
            "type": "string",
            "description": "",
            "example": "https://it-wallet-eaa-provider.example.it/callback#response_code=091535f699ea575c7937fa5f0f454aee"
          }
        },
        "required": [
          "redirect_uri"
        ]
      },
      "inline_response_400": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "The error code",
            "example": "invalid_request"
          },
          "error_description": {
            "type": "string",
            "description": "Text in human-readable form providing further details to clarify the nature of the error encountered",
            "example": "The redirect_uri is not valid for the given client"
          }
        }
      },
      "inline_response_405": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "The error code",
            "example": "method_not-allowed"
          },
          "error_description": {
            "type": "string",
            "description": "Text in human-readable form providing further details to clarify the nature of the error encountered",
            "example": "If the request did not use the POST method, the authorization server responds with an HTTP 405 (Method Not Allowed) status code"
          }
        }
      },
      "inline_response_413": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "The error code",
            "example": "payload_too_large"
          },
          "error_description": {
            "type": "string",
            "description": "Text in human-readable form providing further details to clarify the nature of the error encountered",
            "example": "If the request size was beyond the upper bound that the authorization server allows, the authorization server responds with an HTTP 413 (Payload Too Large) status code."
          }
        }
      },
      "inline_response_429": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "The error code",
            "example": "too_many_requests"
          },
          "error_description": {
            "type": "string",
            "description": "Text in human-readable form providing further details to clarify the nature of the error encountered",
            "example": "If the number of requests from a Wallet Instance during a particular time period exceeds the number the authorization server allows, the authorization server responds with an HTTP 429 (Too Many Requests) status code."
          }
        }
      },
      "inline_response_400_1": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "The error code",
            "example": "invalid_client"
          },
          "error_description": {
            "type": "string",
            "description": "Text in human-readable form providing further details to clarify the nature of the error encountered",
            "example": "Client authentication failed"
          }
        }
      },
      "inline_response_404": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "The error code",
            "example": "federation_not_enabled"
          },
          "error_description": {
            "type": "string",
            "description": "Text in human-readable form providing further details to clarify the nature of the error encountered",
            "example": "OpenID Connect Federation 1.0 not enabled"
          }
        }
      }
    }
  }
}